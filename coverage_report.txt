============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.4.1, pluggy-1.6.0 -- /Users/barrymolina/.venvs/mathsfun/bin/python3.13
cachedir: .pytest_cache
hypothesis profile 'default'
rootdir: /Users/barrymolina/Projects/mathsfun
configfile: pytest.ini
testpaths: tests
plugins: anyio-4.9.0, cov-6.2.1, mock-3.14.1, hypothesis-6.136.0
collecting ... collected 413 items

tests/config/test_container.py::TestContainerInit::test_init_creates_all_dependencies PASSED [  0%]
tests/config/test_container.py::TestContainerInit::test_init_repositories_use_supabase_manager PASSED [  0%]
tests/config/test_container.py::TestContainerInit::test_init_services_use_repositories PASSED [  0%]
tests/config/test_container.py::TestContainerInit::test_init_dependency_chain PASSED [  0%]
tests/config/test_container.py::TestContainerProperties::test_user_repo_property PASSED [  1%]
tests/config/test_container.py::TestContainerProperties::test_quiz_repo_property PASSED [  1%]
tests/config/test_container.py::TestContainerProperties::test_user_svc_property PASSED [  1%]
tests/config/test_container.py::TestContainerProperties::test_quiz_svc_property PASSED [  1%]
tests/config/test_container.py::TestContainerProperties::test_properties_return_same_instances PASSED [  2%]
tests/config/test_container.py::TestContainerDependencyInjection::test_single_supabase_manager_instance PASSED [  2%]
tests/config/test_container.py::TestContainerDependencyInjection::test_services_use_container_repositories PASSED [  2%]
tests/config/test_container.py::TestContainerDependencyInjection::test_dependency_isolation PASSED [  2%]
tests/config/test_container.py::TestContainerDependencyInjection::test_transitive_dependencies PASSED [  3%]
tests/config/test_container.py::TestContainerIntegration::test_container_provides_working_services PASSED [  3%]
tests/config/test_container.py::TestContainerIntegration::test_container_type_consistency PASSED [  3%]
tests/config/test_container.py::TestContainerIntegration::test_container_attribute_access PASSED [  3%]
tests/config/test_container.py::TestContainerIntegration::test_container_lazy_initialization PASSED [  4%]
tests/config/test_container.py::TestContainerEdgeCases::test_container_with_none_supabase_manager PASSED [  4%]
tests/config/test_container.py::TestContainerEdgeCases::test_multiple_property_access_performance PASSED [  4%]
tests/config/test_container.py::TestContainerEdgeCases::test_container_immutability_of_dependencies PASSED [  4%]
tests/config/test_container.py::TestContainerDocumentation::test_container_follows_dependency_injection_pattern PASSED [  5%]
tests/config/test_container.py::TestContainerDocumentation::test_container_provides_all_required_services PASSED [  5%]
tests/config/test_container.py::TestContainerDocumentation::test_container_maintains_single_responsibility PASSED [  5%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptInit::test_init_with_all_fields PASSED [  5%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptInit::test_init_without_user_answer PASSED [  6%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptInit::test_init_with_none_user_answer PASSED [  6%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptInit::test_init_incorrect_answer PASSED [  6%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptProperties::test_response_time_seconds_property PASSED [  6%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptProperties::test_response_time_seconds_zero_ms PASSED [  7%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptProperties::test_response_time_seconds_large_value PASSED [  7%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptProperties::test_response_time_seconds_fractional PASSED [  7%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptFromDict::test_from_dict_complete_data PASSED [  7%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptFromDict::test_from_dict_without_user_answer PASSED [  7%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptFromDict::test_from_dict_with_none_user_answer PASSED [  8%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptFromDict::test_from_dict_with_z_suffix_timestamp FAILED [  8%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptFromDict::test_from_dict_with_timezone_timestamp FAILED [  8%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptFromDict::test_from_dict_invalid_timestamp_format PASSED [  8%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptFromDict::test_from_dict_missing_required_field PASSED [  9%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptFromDict::test_from_dict_boolean_conversion PASSED [  9%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptToDict::test_to_dict_complete_attempt PASSED [  9%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptToDict::test_to_dict_without_user_answer PASSED [  9%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptToDict::test_to_dict_incorrect_attempt PASSED [ 10%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptToDict::test_to_dict_zero_response_time PASSED [ 10%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptRoundTrip::test_round_trip_conversion_complete PASSED [ 10%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptRoundTrip::test_round_trip_conversion_no_user_answer PASSED [ 10%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptRoundTrip::test_round_trip_preserves_properties PASSED [ 11%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptEdgeCases::test_very_large_response_time PASSED [ 11%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptEdgeCases::test_negative_numbers_in_problem PASSED [ 11%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptEdgeCases::test_complex_problem_text PASSED [ 11%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptEdgeCases::test_zero_values PASSED [ 12%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptDataclass::test_dataclass_equality PASSED [ 12%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptDataclass::test_dataclass_inequality PASSED [ 12%]
tests/domain/models/test_problem_attempt.py::TestProblemAttemptDataclass::test_dataclass_str_representation PASSED [ 12%]
tests/domain/models/test_quiz_session.py::TestQuizType::test_quiz_type_values PASSED [ 13%]
tests/domain/models/test_quiz_session.py::TestQuizType::test_quiz_type_from_string PASSED [ 13%]
tests/domain/models/test_quiz_session.py::TestQuizType::test_quiz_type_invalid_value PASSED [ 13%]
tests/domain/models/test_quiz_session.py::TestSessionStatus::test_session_status_values PASSED [ 13%]
tests/domain/models/test_quiz_session.py::TestSessionStatus::test_session_status_from_string PASSED [ 14%]
tests/domain/models/test_quiz_session.py::TestSessionStatus::test_session_status_invalid_value PASSED [ 14%]
tests/domain/models/test_quiz_session.py::TestQuizSessionInit::test_init_minimal_required_fields PASSED [ 14%]
tests/domain/models/test_quiz_session.py::TestQuizSessionInit::test_init_all_fields PASSED [ 14%]
tests/domain/models/test_quiz_session.py::TestQuizSessionProperties::test_accuracy_property_normal_case PASSED [ 15%]
tests/domain/models/test_quiz_session.py::TestQuizSessionProperties::test_accuracy_property_perfect_score PASSED [ 15%]
tests/domain/models/test_quiz_session.py::TestQuizSessionProperties::test_accuracy_property_zero_correct PASSED [ 15%]
tests/domain/models/test_quiz_session.py::TestQuizSessionProperties::test_accuracy_property_zero_problems PASSED [ 15%]
tests/domain/models/test_quiz_session.py::TestQuizSessionProperties::test_duration_seconds_property_with_end_time PASSED [ 15%]
tests/domain/models/test_quiz_session.py::TestQuizSessionProperties::test_duration_seconds_property_without_end_time PASSED [ 16%]
tests/domain/models/test_quiz_session.py::TestQuizSessionProperties::test_duration_seconds_property_same_start_end_time PASSED [ 16%]
tests/domain/models/test_quiz_session.py::TestQuizSessionProperties::test_is_completed_property_true PASSED [ 16%]
tests/domain/models/test_quiz_session.py::TestQuizSessionProperties::test_is_completed_property_false_active PASSED [ 16%]
tests/domain/models/test_quiz_session.py::TestQuizSessionProperties::test_is_completed_property_false_abandoned PASSED [ 17%]
tests/domain/models/test_quiz_session.py::TestQuizSessionFromDict::test_from_dict_minimal_data PASSED [ 17%]
tests/domain/models/test_quiz_session.py::TestQuizSessionFromDict::test_from_dict_complete_data PASSED [ 17%]
tests/domain/models/test_quiz_session.py::TestQuizSessionFromDict::test_from_dict_with_z_suffix_timestamps FAILED [ 17%]
tests/domain/models/test_quiz_session.py::TestQuizSessionFromDict::test_from_dict_with_timezone_timestamps FAILED [ 18%]
tests/domain/models/test_quiz_session.py::TestQuizSessionFromDict::test_from_dict_invalid_quiz_type PASSED [ 18%]
tests/domain/models/test_quiz_session.py::TestQuizSessionFromDict::test_from_dict_invalid_status PASSED [ 18%]
tests/domain/models/test_quiz_session.py::TestQuizSessionFromDict::test_from_dict_invalid_datetime_format PASSED [ 18%]
tests/domain/models/test_quiz_session.py::TestQuizSessionFromDict::test_from_dict_missing_required_field PASSED [ 19%]
tests/domain/models/test_quiz_session.py::TestQuizSessionToDict::test_to_dict_complete_session PASSED [ 19%]
tests/domain/models/test_quiz_session.py::TestQuizSessionToDict::test_to_dict_no_end_time PASSED [ 19%]
tests/domain/models/test_quiz_session.py::TestQuizSessionToDict::test_to_dict_minimal_session PASSED [ 19%]
tests/domain/models/test_quiz_session.py::TestQuizSessionRoundTrip::test_round_trip_conversion_complete PASSED [ 20%]
tests/domain/models/test_quiz_session.py::TestQuizSessionRoundTrip::test_round_trip_conversion_minimal PASSED [ 20%]
tests/domain/models/test_quiz_session.py::TestQuizSessionEdgeCases::test_accuracy_with_more_correct_than_total PASSED [ 20%]
tests/domain/models/test_quiz_session.py::TestQuizSessionEdgeCases::test_very_short_duration PASSED [ 20%]
tests/domain/models/test_quiz_session.py::TestQuizSessionEdgeCases::test_large_numbers PASSED [ 21%]
tests/domain/models/test_quiz_session.py::TestQuizSessionDataclass::test_dataclass_equality PASSED [ 21%]
tests/domain/models/test_quiz_session.py::TestQuizSessionDataclass::test_dataclass_inequality PASSED [ 21%]
tests/domain/models/test_quiz_session.py::TestQuizSessionDataclass::test_dataclass_str_representation PASSED [ 21%]
tests/domain/services/test_quiz_service.py::TestQuizServiceInit::test_init PASSED [ 22%]
tests/domain/services/test_quiz_service.py::TestStartQuizSession::test_start_quiz_session_success PASSED [ 22%]
tests/domain/services/test_quiz_service.py::TestStartQuizSession::test_start_quiz_session_repository_failure PASSED [ 22%]
tests/domain/services/test_quiz_service.py::TestStartQuizSession::test_start_quiz_session_invalid_quiz_type PASSED [ 22%]
tests/domain/services/test_quiz_service.py::TestRecordAnswer::test_record_answer_correct PASSED [ 23%]
tests/domain/services/test_quiz_service.py::TestRecordAnswer::test_record_answer_incorrect PASSED [ 23%]
tests/domain/services/test_quiz_service.py::TestRecordAnswer::test_record_answer_none_user_answer PASSED [ 23%]
tests/domain/services/test_quiz_service.py::TestRecordAnswer::test_record_answer_save_attempt_fails PASSED [ 23%]
tests/domain/services/test_quiz_service.py::TestRecordAnswer::test_record_answer_increment_stats_fails PASSED [ 23%]
tests/domain/services/test_quiz_service.py::TestCompleteSession::test_complete_session_success PASSED [ 24%]
tests/domain/services/test_quiz_service.py::TestCompleteSession::test_complete_session_no_attempts PASSED [ 24%]
tests/domain/services/test_quiz_service.py::TestCompleteSession::test_complete_session_only_incorrect_attempts PASSED [ 24%]
tests/domain/services/test_quiz_service.py::TestCompleteSession::test_complete_session_repository_failure PASSED [ 24%]
tests/domain/services/test_quiz_service.py::TestAbandonSession::test_abandon_session_success PASSED [ 25%]
tests/domain/services/test_quiz_service.py::TestAbandonSession::test_abandon_session_not_found PASSED [ 25%]
tests/domain/services/test_quiz_service.py::TestAbandonSession::test_abandon_session_update_fails PASSED [ 25%]
tests/domain/services/test_quiz_service.py::TestGetUserProgress::test_get_user_progress_with_sessions PASSED [ 25%]
tests/domain/services/test_quiz_service.py::TestGetUserProgress::test_get_user_progress_no_completed_sessions PASSED [ 26%]
tests/domain/services/test_quiz_service.py::TestGetUserProgress::test_get_user_progress_sessions_with_no_end_time PASSED [ 26%]
tests/domain/services/test_quiz_service.py::TestGetUserProgress::test_get_user_progress_zero_problems PASSED [ 26%]
tests/domain/services/test_quiz_service.py::TestGetSessionDetails::test_get_session_details_success PASSED [ 26%]
tests/domain/services/test_quiz_service.py::TestGetSessionDetails::test_get_session_details_session_not_found PASSED [ 27%]
tests/domain/services/test_quiz_service.py::TestGetSessionDetails::test_get_session_details_no_attempts PASSED [ 27%]
tests/domain/services/test_quiz_service.py::TestQuizSessionResultNamedTuple::test_quiz_session_result_creation PASSED [ 27%]
tests/domain/services/test_quiz_service.py::TestQuizSessionResultNamedTuple::test_quiz_session_result_fields PASSED [ 27%]
tests/domain/services/test_quiz_service.py::TestUserProgressNamedTuple::test_user_progress_creation PASSED [ 28%]
tests/domain/services/test_quiz_service.py::TestUserProgressNamedTuple::test_user_progress_fields PASSED [ 28%]
tests/domain/services/test_quiz_service.py::TestQuizServiceIntegration::test_all_methods_use_repository PASSED [ 28%]
tests/domain/services/test_user_service.py::TestUserServiceInit::test_init_sets_attributes_correctly PASSED [ 28%]
tests/domain/services/test_user_service.py::TestGetOrCreateUserProfile::test_get_existing_user_profile PASSED [ 29%]
tests/domain/services/test_user_service.py::TestGetOrCreateUserProfile::test_create_new_user_profile PASSED [ 29%]
tests/domain/services/test_user_service.py::TestGetOrCreateUserProfile::test_create_user_with_default_display_name PASSED [ 29%]
tests/domain/services/test_user_service.py::TestGetOrCreateUserProfile::test_creation_failed_fallback_to_existing PASSED [ 29%]
tests/domain/services/test_user_service.py::TestGetOrCreateUserProfile::test_creation_failed_no_fallback PASSED [ 30%]
tests/domain/services/test_user_service.py::TestGetOrCreateUserProfile::test_creation_successful_clears_cache PASSED [ 30%]
tests/domain/services/test_user_service.py::TestUpdateDisplayName::test_update_display_name_success PASSED [ 30%]
tests/domain/services/test_user_service.py::TestUpdateDisplayName::test_update_display_name_user_not_found PASSED [ 30%]
tests/domain/services/test_user_service.py::TestUpdateDisplayName::test_update_display_name_update_fails PASSED [ 30%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_not_authenticated PASSED [ 31%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_cached_without_force_refresh PASSED [ 31%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_force_refresh_with_profile PASSED [ 31%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_no_force_refresh_with_profile PASSED [ 31%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_force_refresh_no_auth_response PASSED [ 32%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_force_refresh_no_user_in_response PASSED [ 32%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_no_session PASSED [ 32%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_no_user_in_session PASSED [ 32%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_create_profile_from_auth_force_refresh PASSED [ 33%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_create_profile_from_auth_no_force_refresh PASSED [ 33%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_display_name_fallbacks FAILED [ 33%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_exception_handling PASSED [ 33%]
tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_force_refresh_different_user_id PASSED [ 34%]
tests/domain/services/test_user_service.py::TestClearUserCache::test_clear_user_cache PASSED [ 34%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestQuizRepositoryInit::test_init PASSED [ 34%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestCreateSession::test_create_session_success ERROR [ 34%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestCreateSession::test_create_session_not_authenticated PASSED [ 35%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestCreateSession::test_create_session_exception ERROR [ 35%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestCreateSession::test_create_session_no_data_returned ERROR [ 35%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetSession::test_get_session_success FAILED [ 35%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetSession::test_get_session_not_found PASSED [ 36%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetSession::test_get_session_not_authenticated PASSED [ 36%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetSession::test_get_session_exception PASSED [ 36%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestUpdateSession::test_update_session_success ERROR [ 36%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestUpdateSession::test_update_session_not_authenticated PASSED [ 37%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestUpdateSession::test_update_session_exception ERROR [ 37%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestUpdateSession::test_update_session_no_data_returned ERROR [ 37%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestCompleteSession::test_complete_session_success FAILED [ 37%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestCompleteSession::test_complete_session_not_authenticated PASSED [ 38%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestCompleteSession::test_complete_session_exception PASSED [ 38%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetUserSessions::test_get_user_sessions_success FAILED [ 38%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetUserSessions::test_get_user_sessions_with_status_filter FAILED [ 38%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetUserSessions::test_get_user_sessions_custom_limit PASSED [ 38%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetUserSessions::test_get_user_sessions_no_data PASSED [ 39%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetUserSessions::test_get_user_sessions_not_authenticated PASSED [ 39%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetUserSessions::test_get_user_sessions_exception PASSED [ 39%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestSaveAttempt::test_save_attempt_success ERROR [ 39%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestSaveAttempt::test_save_attempt_not_authenticated PASSED [ 40%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestSaveAttempt::test_save_attempt_exception ERROR [ 40%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestSaveAttempt::test_save_attempt_no_data_returned ERROR [ 40%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetSessionAttempts::test_get_session_attempts_success FAILED [ 40%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetSessionAttempts::test_get_session_attempts_no_data PASSED [ 41%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetSessionAttempts::test_get_session_attempts_not_authenticated PASSED [ 41%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetSessionAttempts::test_get_session_attempts_exception PASSED [ 41%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestIncrementSessionStats::test_increment_session_stats_success_correct ERROR [ 41%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestIncrementSessionStats::test_increment_session_stats_success_incorrect ERROR [ 42%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestIncrementSessionStats::test_increment_session_stats_session_not_found PASSED [ 42%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestIncrementSessionStats::test_increment_session_stats_not_authenticated PASSED [ 42%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestIncrementSessionStats::test_increment_session_stats_exception ERROR [ 42%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestIncrementSessionStats::test_increment_session_stats_update_returns_none ERROR [ 43%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestQuizRepositoryIntegration::test_repository_inheritance PASSED [ 43%]
tests/infrastructure/database/repositories/test_quiz_repository.py::TestQuizRepositoryIntegration::test_all_methods_require_authentication PASSED [ 43%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryCore::test_get_user_profile_success PASSED [ 43%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryCore::test_get_user_profile_not_found PASSED [ 44%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryCore::test_create_user_profile_success PASSED [ 44%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryCore::test_update_user_profile_success PASSED [ 44%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryCore::test_update_last_active_success PASSED [ 44%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryErrorHandling::test_get_user_profile_database_error PASSED [ 45%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryErrorHandling::test_create_user_profile_validation_error PASSED [ 45%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryErrorHandling::test_update_last_active_network_error PASSED [ 45%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryDataHandling::test_get_user_profile_empty_response PASSED [ 45%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryDataHandling::test_create_user_profile_with_minimal_data PASSED [ 46%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryDataHandling::test_update_last_active_no_response_data PASSED [ 46%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryDataHandling::test_user_model_conversion_accuracy PASSED [ 46%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryDataHandling::test_datetime_handling_edge_cases PASSED [ 46%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryDataHandling::test_response_handling_patterns PASSED [ 46%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryAuthentication::test_methods_blocked_when_not_authenticated PASSED [ 47%]
tests/infrastructure/database/repositories/test_user_repository.py::TestUserRepositoryAuthentication::test_authentication_check_message PASSED [ 47%]
tests/infrastructure/database/test_supabase_manager.py::TestOAuthServer::test_oauth_server_init FAILED [ 47%]
tests/infrastructure/database/test_supabase_manager.py::TestOAuthCallbackHandler::test_log_message_suppressed FAILED [ 47%]
tests/infrastructure/database/test_supabase_manager.py::TestOAuthCallbackHandler::test_do_get_favicon_request FAILED [ 48%]
tests/infrastructure/database/test_supabase_manager.py::TestOAuthCallbackHandler::test_do_get_already_authenticated FAILED [ 48%]
tests/infrastructure/database/test_supabase_manager.py::TestOAuthCallbackHandler::test_do_get_success_callback FAILED [ 48%]
tests/infrastructure/database/test_supabase_manager.py::TestOAuthCallbackHandler::test_do_get_error_callback FAILED [ 48%]
tests/infrastructure/database/test_supabase_manager.py::TestOAuthCallbackHandler::test_do_get_unknown_callback FAILED [ 49%]
tests/infrastructure/database/test_supabase_manager.py::TestStartOAuthServer::test_start_oauth_server PASSED [ 49%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerInit::test_init PASSED [ 49%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerBasicMethods::test_get_client PASSED [ 49%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerBasicMethods::test_is_authenticated_false PASSED [ 50%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerBasicMethods::test_is_authenticated_true PASSED [ 50%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerBasicMethods::test_get_session_data_none PASSED [ 50%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerBasicMethods::test_get_session_data_exists PASSED [ 50%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerBasicMethods::test_sign_out PASSED [ 51%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_save_session_not_authenticated PASSED [ 51%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_save_session_no_session_data PASSED [ 51%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_save_session_success PASSED [ 51%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_save_session_exception PASSED [ 52%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_restore_session_missing_tokens PASSED [ 52%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_restore_session_success_set_session PASSED [ 52%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_restore_session_fallback_to_refresh PASSED [ 52%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_restore_session_refresh_fails PASSED [ 53%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_restore_session_exception PASSED [ 53%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_load_persisted_session_no_data PASSED [ 53%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_load_persisted_session_success PASSED [ 53%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_load_persisted_session_restore_fails PASSED [ 53%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerSessionManagement::test_load_persisted_session_exception PASSED [ 54%]
tests/infrastructure/database/test_supabase_manager.py::TestSignInWithGoogle::test_sign_in_with_google_no_oauth_url PASSED [ 54%]
tests/infrastructure/database/test_supabase_manager.py::TestSignInWithGoogle::test_sign_in_with_google_timeout PASSED [ 54%]
tests/infrastructure/database/test_supabase_manager.py::TestSignInWithGoogle::test_sign_in_with_google_success FAILED [ 54%]
tests/infrastructure/database/test_supabase_manager.py::TestSignInWithGoogle::test_sign_in_with_google_no_code_verifier FAILED [ 55%]
tests/infrastructure/database/test_supabase_manager.py::TestSignInWithGoogle::test_sign_in_with_google_exchange_fails FAILED [ 55%]
tests/infrastructure/database/test_supabase_manager.py::TestSignInWithGoogle::test_sign_in_with_google_no_session_created FAILED [ 55%]
tests/infrastructure/database/test_supabase_manager.py::TestSignInWithGoogle::test_sign_in_with_google_server_error_result PASSED [ 55%]
tests/infrastructure/database/test_supabase_manager.py::TestSignInWithGoogle::test_sign_in_with_google_general_exception PASSED [ 56%]
tests/infrastructure/database/test_supabase_manager.py::TestValidateEnvironment::test_validate_environment_missing_url PASSED [ 56%]
tests/infrastructure/database/test_supabase_manager.py::TestValidateEnvironment::test_validate_environment_missing_key PASSED [ 56%]
tests/infrastructure/database/test_supabase_manager.py::TestValidateEnvironment::test_validate_environment_success PASSED [ 56%]
tests/infrastructure/database/test_supabase_manager.py::TestPKCEStorage::test_pkce_storage_operations PASSED [ 57%]
tests/infrastructure/database/test_supabase_manager.py::TestSupabaseManagerMarkings::test_all_public_methods_tested PASSED [ 57%]
tests/infrastructure/storage/test_session_storage.py::TestSessionStorageInit::test_init_default_app_name PASSED [ 57%]
tests/infrastructure/storage/test_session_storage.py::TestSessionStorageInit::test_init_custom_app_name PASSED [ 57%]
tests/infrastructure/storage/test_session_storage.py::TestSessionStorageInit::test_init_creates_config_directory PASSED [ 58%]
tests/infrastructure/storage/test_session_storage.py::TestGetConfigDirectory::test_get_config_directory_windows FAILED [ 58%]
tests/infrastructure/storage/test_session_storage.py::TestGetConfigDirectory::test_get_config_directory_linux_with_xdg PASSED [ 58%]
tests/infrastructure/storage/test_session_storage.py::TestGetConfigDirectory::test_get_config_directory_linux_without_xdg FAILED [ 58%]
tests/infrastructure/storage/test_session_storage.py::TestEnsureConfigDirectory::test_ensure_config_directory_creates_directory PASSED [ 59%]
tests/infrastructure/storage/test_session_storage.py::TestEnsureConfigDirectory::test_ensure_config_directory_sets_permissions_unix PASSED [ 59%]
tests/infrastructure/storage/test_session_storage.py::TestEnsureConfigDirectory::test_ensure_config_directory_no_permissions_windows PASSED [ 59%]
tests/infrastructure/storage/test_session_storage.py::TestEnsureConfigDirectory::test_ensure_config_directory_exception_handling PASSED [ 59%]
tests/infrastructure/storage/test_session_storage.py::TestSaveSession::test_save_session_success PASSED [ 60%]
tests/infrastructure/storage/test_session_storage.py::TestSaveSession::test_save_session_sets_file_permissions_unix PASSED [ 60%]
tests/infrastructure/storage/test_session_storage.py::TestSaveSession::test_save_session_no_file_permissions_windows PASSED [ 60%]
tests/infrastructure/storage/test_session_storage.py::TestSaveSession::test_save_session_atomic_operation PASSED [ 60%]
tests/infrastructure/storage/test_session_storage.py::TestSaveSession::test_save_session_cleanup_on_failure PASSED [ 61%]
tests/infrastructure/storage/test_session_storage.py::TestSaveSession::test_save_session_cleanup_exception_handling PASSED [ 61%]
tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_success PASSED [ 61%]
tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_file_not_exists PASSED [ 61%]
tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_insecure_permissions PASSED [ 61%]
tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_skip_permissions_check_windows PASSED [ 62%]
tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_invalid_json PASSED [ 62%]
tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_missing_session_key PASSED [ 62%]
tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_invalid_structure FAILED [ 62%]
tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_expired PASSED [ 63%]
tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_file_not_found_exception FAILED [ 63%]
tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_unexpected_exception FAILED [ 63%]
tests/infrastructure/storage/test_session_storage.py::TestIsSessionExpired::test_is_session_expired_no_expires_at PASSED [ 63%]
tests/infrastructure/storage/test_session_storage.py::TestIsSessionExpired::test_is_session_expired_valid_session PASSED [ 64%]
tests/infrastructure/storage/test_session_storage.py::TestIsSessionExpired::test_is_session_expired_expired_session PASSED [ 64%]
tests/infrastructure/storage/test_session_storage.py::TestIsSessionExpired::test_is_session_expired_with_buffer PASSED [ 64%]
tests/infrastructure/storage/test_session_storage.py::TestIsSessionExpired::test_is_session_expired_exception_handling PASSED [ 64%]
tests/infrastructure/storage/test_session_storage.py::TestClearSession::test_clear_session_public_method PASSED [ 65%]
tests/infrastructure/storage/test_session_storage.py::TestClearSession::test_clear_session_private_method PASSED [ 65%]
tests/infrastructure/storage/test_session_storage.py::TestClearSession::test_clear_session_file_not_exists PASSED [ 65%]
tests/infrastructure/storage/test_session_storage.py::TestClearSession::test_clear_session_exception_handling PASSED [ 65%]
tests/infrastructure/storage/test_session_storage.py::TestHasStoredSession::test_has_stored_session_true PASSED [ 66%]
tests/infrastructure/storage/test_session_storage.py::TestHasStoredSession::test_has_stored_session_false PASSED [ 66%]
tests/infrastructure/storage/test_session_storage.py::TestGetSessionInfo::test_get_session_info_success PASSED [ 66%]
tests/infrastructure/storage/test_session_storage.py::TestGetSessionInfo::test_get_session_info_file_not_exists PASSED [ 66%]
tests/infrastructure/storage/test_session_storage.py::TestGetSessionInfo::test_get_session_info_expired_session PASSED [ 67%]
tests/infrastructure/storage/test_session_storage.py::TestGetSessionInfo::test_get_session_info_no_session_data PASSED [ 67%]
tests/infrastructure/storage/test_session_storage.py::TestGetSessionInfo::test_get_session_info_exception_handling PASSED [ 67%]
tests/infrastructure/storage/test_session_storage.py::TestSessionStorageIntegration::test_full_session_lifecycle PASSED [ 67%]
tests/infrastructure/storage/test_session_storage.py::TestSessionStorageIntegration::test_session_data_integrity FAILED [ 68%]
tests/infrastructure/storage/test_session_storage.py::TestSessionStorageIntegration::test_concurrent_access_simulation PASSED [ 68%]
tests/integration/test_integration.py::TestAdditionModeIntegration::test_addition_mode_complete_flow PASSED [ 68%]
tests/integration/test_integration.py::TestAdditionModeIntegration::test_addition_mode_unlimited_flow PASSED [ 68%]
tests/integration/test_integration.py::TestAdditionModeIntegration::test_addition_mode_error_handling PASSED [ 69%]
tests/integration/test_integration.py::TestQuizFlowIntegration::test_run_addition_quiz_complete_session PASSED [ 69%]
tests/integration/test_integration.py::TestQuizFlowIntegration::test_run_addition_quiz_early_stop PASSED [ 69%]
tests/integration/test_integration.py::TestQuizFlowIntegration::test_run_addition_quiz_with_skips_and_retries PASSED [ 69%]
tests/integration/test_integration.py::TestQuizFlowIntegration::test_run_addition_quiz_exit_command PASSED [ 69%]
tests/integration/test_integration.py::TestEndToEndFlows::test_perfect_score_session PASSED [ 70%]
tests/integration/test_integration.py::TestEndToEndFlows::test_mixed_difficulty_session PASSED [ 70%]
tests/integration/test_integration.py::TestStressTests::test_large_number_of_problems PASSED [ 70%]
tests/integration/test_integration.py::TestStressTests::test_unlimited_generator_properties PASSED [ 70%]
tests/integration/test_user_repository_integration.py::TestUserRepositoryIntegration::test_full_user_lifecycle SKIPPED [ 71%]
tests/integration/test_user_repository_integration.py::TestUserRepositoryIntegration::test_get_nonexistent_user SKIPPED [ 71%]
tests/integration/test_user_repository_integration.py::TestUserRepositoryIntegration::test_update_last_active SKIPPED [ 71%]
tests/integration/test_user_repository_integration.py::TestUserRepositoryIntegration::test_create_user_with_minimal_data SKIPPED [ 71%]
tests/integration/test_user_repository_integration.py::TestUserRepositoryIntegration::test_update_nonexistent_user SKIPPED [ 72%]
tests/integration/test_user_repository_integration.py::TestUserRepositoryIntegration::test_update_last_active_nonexistent_user SKIPPED [ 72%]
tests/integration/test_user_repository_integration.py::TestUserRepositoryPerformance::test_user_creation_performance SKIPPED [ 72%]
tests/integration/test_user_repository_integration.py::TestUserRepositoryPerformance::test_user_retrieval_performance SKIPPED [ 72%]
tests/integration/test_user_repository_integration.py::TestDatabaseSchema::test_user_profiles_table_exists SKIPPED [ 73%]
tests/integration/test_user_repository_integration.py::TestDatabaseSchema::test_user_profiles_constraints SKIPPED [ 73%]
tests/integration/test_user_repository_integration.py::TestRowLevelSecurity::test_user_can_only_access_own_data SKIPPED [ 73%]
tests/presentation/cli/test_main.py::TestMain::test_main_exit_immediately PASSED [ 73%]
tests/presentation/cli/test_main.py::TestMain::test_main_addition_mode_then_exit PASSED [ 74%]
tests/presentation/cli/test_main.py::TestMain::test_main_invalid_option_then_exit PASSED [ 74%]
tests/presentation/cli/test_main.py::TestMain::test_main_multiple_invalid_options_then_addition_then_exit PASSED [ 74%]
tests/presentation/cli/test_main.py::TestMainIfName::test_main_called_when_run_as_script PASSED [ 74%]
tests/presentation/cli/test_ui.py::TestPrintWelcome::test_print_welcome_output PASSED [ 75%]
tests/presentation/cli/test_ui.py::TestPrintMainMenu::test_print_main_menu_output PASSED [ 75%]
tests/presentation/cli/test_ui.py::TestGetUserInput::test_get_user_input_no_default PASSED [ 75%]
tests/presentation/cli/test_ui.py::TestGetUserInput::test_get_user_input_with_default_used PASSED [ 75%]
tests/presentation/cli/test_ui.py::TestGetUserInput::test_get_user_input_with_default_empty_input PASSED [ 76%]
tests/presentation/cli/test_ui.py::TestGetUserInput::test_get_user_input_with_default_whitespace_input PASSED [ 76%]
tests/presentation/cli/test_ui.py::TestGetUserInput::test_get_user_input_strips_whitespace PASSED [ 76%]
tests/presentation/cli/test_ui.py::TestGetUserInput::test_get_user_input_various_scenarios[hello-None-hello] PASSED [ 76%]
tests/presentation/cli/test_ui.py::TestGetUserInput::test_get_user_input_various_scenarios[hello-default-hello] PASSED [ 76%]
tests/presentation/cli/test_ui.py::TestGetUserInput::test_get_user_input_various_scenarios[-default-default] PASSED [ 77%]
tests/presentation/cli/test_ui.py::TestGetUserInput::test_get_user_input_various_scenarios[   -default-default] PASSED [ 77%]
tests/presentation/cli/test_ui.py::TestGetUserInput::test_get_user_input_various_scenarios[123-456-123] PASSED [ 77%]
tests/presentation/cli/test_ui.py::TestGetUserInput::test_get_user_input_various_scenarios[-None-] PASSED [ 77%]
tests/presentation/cli/test_ui.py::TestUIIntegration::test_ui_functions_dont_interfere PASSED [ 78%]
tests/presentation/cli/test_ui.py::TestUIIntegration::test_multiple_input_calls PASSED [ 78%]
tests/presentation/cli/test_ui.py::TestUIInAddition::test_display_difficulty_options PASSED [ 78%]
tests/presentation/cli/test_ui.py::TestUIInAddition::test_get_difficulty_range_valid_input PASSED [ 78%]
tests/presentation/cli/test_ui.py::TestUIInAddition::test_get_difficulty_range_invalid_then_valid PASSED [ 79%]
tests/presentation/cli/test_ui.py::TestUIInAddition::test_get_num_problems_valid PASSED [ 79%]
tests/presentation/cli/test_ui.py::TestUIInAddition::test_get_num_problems_unlimited PASSED [ 79%]
tests/presentation/cli/test_ui.py::TestUIInAddition::test_get_num_problems_invalid_then_valid PASSED [ 79%]
tests/presentation/controllers/test_addition.py::TestProblemGeneration::test_generate_single_digit_numbers PASSED [ 80%]
tests/presentation/controllers/test_addition.py::TestProblemGeneration::test_generate_two_digit_no_carrying PASSED [ 80%]
tests/presentation/controllers/test_addition.py::TestProblemGeneration::test_generate_two_digit_with_carrying PASSED [ 80%]
tests/presentation/controllers/test_addition.py::TestProblemGeneration::test_generate_three_digit_no_carrying PASSED [ 80%]
tests/presentation/controllers/test_addition.py::TestProblemGeneration::test_generate_three_digit_with_carrying PASSED [ 81%]
tests/presentation/controllers/test_addition.py::TestGenerateProblemByDifficulty::test_valid_difficulties[1] PASSED [ 81%]
tests/presentation/controllers/test_addition.py::TestGenerateProblemByDifficulty::test_valid_difficulties[2] PASSED [ 81%]
tests/presentation/controllers/test_addition.py::TestGenerateProblemByDifficulty::test_valid_difficulties[3] PASSED [ 81%]
tests/presentation/controllers/test_addition.py::TestGenerateProblemByDifficulty::test_valid_difficulties[4] PASSED [ 82%]
tests/presentation/controllers/test_addition.py::TestGenerateProblemByDifficulty::test_valid_difficulties[5] PASSED [ 82%]
tests/presentation/controllers/test_addition.py::TestGenerateProblemByDifficulty::test_invalid_difficulty PASSED [ 82%]
tests/presentation/controllers/test_addition.py::TestProblemGenerator::test_init_limited PASSED [ 82%]
tests/presentation/controllers/test_addition.py::TestProblemGenerator::test_init_unlimited PASSED [ 83%]
tests/presentation/controllers/test_addition.py::TestProblemGenerator::test_get_next_problem PASSED [ 83%]
tests/presentation/controllers/test_addition.py::TestProblemGenerator::test_has_more_problems_limited PASSED [ 83%]
tests/presentation/controllers/test_addition.py::TestProblemGenerator::test_has_more_problems_unlimited PASSED [ 83%]
tests/presentation/controllers/test_addition.py::TestProblemGenerator::test_get_progress_display_limited PASSED [ 84%]
tests/presentation/controllers/test_addition.py::TestProblemGenerator::test_get_progress_display_unlimited PASSED [ 84%]
tests/presentation/controllers/test_addition.py::TestConstants::test_difficulty_descriptions PASSED [ 84%]
tests/presentation/controllers/test_addition.py::TestPropertyBased::test_problem_generation_always_valid PASSED [ 84%]
tests/presentation/controllers/test_addition.py::TestPropertyBased::test_generator_produces_valid_problems PASSED [ 84%]
tests/presentation/controllers/test_addition.py::TestGetDifficultyRangeInputValidation::test_invalid_low_difficulty_input PASSED [ 85%]
tests/presentation/controllers/test_addition.py::TestGetDifficultyRangeInputValidation::test_high_less_than_low_difficulty PASSED [ 85%]
tests/presentation/controllers/test_addition.py::TestGetDifficultyRangeInputValidation::test_invalid_high_difficulty_input PASSED [ 85%]
tests/presentation/controllers/test_addition.py::TestRunAdditionQuizEdgeCases::test_unlimited_mode_start_message PASSED [ 85%]
tests/presentation/controllers/test_addition.py::TestRunAdditionQuizEdgeCases::test_quiz_invalid_input_handling PASSED [ 86%]
tests/presentation/controllers/test_addition_tables.py::TestGetTableRange::test_get_table_range_valid_input PASSED [ 86%]
tests/presentation/controllers/test_addition_tables.py::TestGetTableRange::test_get_table_range_same_values PASSED [ 86%]
tests/presentation/controllers/test_addition_tables.py::TestGetTableRange::test_get_table_range_low_out_of_bounds PASSED [ 86%]
tests/presentation/controllers/test_addition_tables.py::TestGetTableRange::test_get_table_range_low_too_high PASSED [ 87%]
tests/presentation/controllers/test_addition_tables.py::TestGetTableRange::test_get_table_range_high_out_of_bounds FAILED [ 87%]
tests/presentation/controllers/test_addition_tables.py::TestGetTableRange::test_get_table_range_low_greater_than_high PASSED [ 87%]
tests/presentation/controllers/test_addition_tables.py::TestGetTableRange::test_get_table_range_invalid_number_format PASSED [ 87%]
tests/presentation/controllers/test_addition_tables.py::TestGetTableRange::test_get_table_range_multiple_validation_failures PASSED [ 88%]
tests/presentation/controllers/test_addition_tables.py::TestGetOrderPreference::test_get_order_preference_sequential PASSED [ 88%]
tests/presentation/controllers/test_addition_tables.py::TestGetOrderPreference::test_get_order_preference_random PASSED [ 88%]
tests/presentation/controllers/test_addition_tables.py::TestGetOrderPreference::test_get_order_preference_invalid_choice PASSED [ 88%]
tests/presentation/controllers/test_addition_tables.py::TestGetOrderPreference::test_get_order_preference_invalid_format PASSED [ 89%]
tests/presentation/controllers/test_addition_tables.py::TestGetOrderPreference::test_get_order_preference_default_value PASSED [ 89%]
tests/presentation/controllers/test_addition_tables.py::TestGenerateAdditionTableProblems::test_generate_problems_single_number PASSED [ 89%]
tests/presentation/controllers/test_addition_tables.py::TestGenerateAdditionTableProblems::test_generate_problems_small_range PASSED [ 89%]
tests/presentation/controllers/test_addition_tables.py::TestGenerateAdditionTableProblems::test_generate_problems_medium_range PASSED [ 90%]
tests/presentation/controllers/test_addition_tables.py::TestGenerateAdditionTableProblems::test_generate_problems_order PASSED [ 90%]
tests/presentation/controllers/test_addition_tables.py::TestGenerateAdditionTableProblems::test_generate_problems_large_numbers PASSED [ 90%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTableGenerator::test_generator_init_sequential PASSED [ 90%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTableGenerator::test_generator_init_random PASSED [ 91%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTableGenerator::test_get_next_problem PASSED [ 91%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTableGenerator::test_get_next_problem_sequential_order PASSED [ 91%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTableGenerator::test_get_next_problem_out_of_bounds PASSED [ 91%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTableGenerator::test_has_more_problems PASSED [ 92%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTableGenerator::test_get_total_generated PASSED [ 92%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTableGenerator::test_get_progress_display PASSED [ 92%]
tests/presentation/controllers/test_addition_tables.py::TestRunAdditionTableQuiz::test_run_quiz_complete_all_problems PASSED [ 92%]
tests/presentation/controllers/test_addition_tables.py::TestRunAdditionTableQuiz::test_run_quiz_wrong_then_correct_answer PASSED [ 92%]
tests/presentation/controllers/test_addition_tables.py::TestRunAdditionTableQuiz::test_run_quiz_skip_problem PASSED [ 93%]
tests/presentation/controllers/test_addition_tables.py::TestRunAdditionTableQuiz::test_run_quiz_exit_command PASSED [ 93%]
tests/presentation/controllers/test_addition_tables.py::TestRunAdditionTableQuiz::test_run_quiz_stop_command PASSED [ 93%]
tests/presentation/controllers/test_addition_tables.py::TestRunAdditionTableQuiz::test_run_quiz_invalid_input_then_valid PASSED [ 93%]
tests/presentation/controllers/test_addition_tables.py::TestRunAdditionTableQuiz::test_run_quiz_multiple_problems PASSED [ 94%]
tests/presentation/controllers/test_addition_tables.py::TestRunAdditionTableQuiz::test_run_quiz_mixed_results PASSED [ 94%]
tests/presentation/controllers/test_addition_tables.py::TestRunAdditionTableQuiz::test_run_quiz_display_messages FAILED [ 94%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTablesMode::test_addition_tables_mode_success FAILED [ 94%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTablesMode::test_addition_tables_mode_single_number PASSED [ 95%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTablesMode::test_addition_tables_mode_exception_handling PASSED [ 95%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTablesMode::test_addition_tables_mode_generator_created_correctly PASSED [ 95%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTablesIntegration::test_full_problem_generation_and_solving_flow PASSED [ 95%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTablesIntegration::test_randomization_affects_order PASSED [ 96%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTablesIntegration::test_edge_case_single_problem PASSED [ 96%]
tests/presentation/controllers/test_addition_tables.py::TestAdditionTablesIntegration::test_large_range_calculation PASSED [ 96%]
tests/presentation/controllers/test_session.py::TestFormatDuration::test_seconds_only PASSED [ 96%]
tests/presentation/controllers/test_session.py::TestFormatDuration::test_minutes_and_seconds PASSED [ 97%]
tests/presentation/controllers/test_session.py::TestFormatDuration::test_hours_minutes_seconds PASSED [ 97%]
tests/presentation/controllers/test_session.py::TestFormatDuration::test_edge_cases PASSED [ 97%]
tests/presentation/controllers/test_session.py::TestShowResults::test_show_results_unlimited_session PASSED [ 97%]
tests/presentation/controllers/test_session.py::TestShowResults::test_show_results_limited_session_completed PASSED [ 98%]
tests/presentation/controllers/test_session.py::TestShowResults::test_show_results_limited_session_stopped PASSED [ 98%]
tests/presentation/controllers/test_session.py::TestShowResults::test_show_results_no_attempts PASSED [ 98%]
tests/presentation/controllers/test_session.py::TestShowResults::test_accuracy_messages[9-10-\U0001f31f Outstanding! You're a math superstar!] PASSED [ 98%]
tests/presentation/controllers/test_session.py::TestShowResults::test_accuracy_messages[8-10-\U0001f38a Excellent work! Keep it up!] PASSED [ 99%]
tests/presentation/controllers/test_session.py::TestShowResults::test_accuracy_messages[7-10-\U0001f44d Good job! Practice makes perfect!] PASSED [ 99%]
tests/presentation/controllers/test_session.py::TestShowResults::test_accuracy_messages[6-10-\U0001f4aa Keep practicing! You'll get better!] PASSED [ 99%]
tests/presentation/controllers/test_session.py::TestPromptStartSession::test_prompt_unlimited_session PASSED [ 99%]
tests/presentation/controllers/test_session.py::TestPromptStartSession::test_prompt_limited_session PASSED [100%]
ERROR: Coverage failure: total of 84 is less than fail-under=95


==================================== ERRORS ====================================
_______ ERROR at setup of TestCreateSession.test_create_session_success ________

    @pytest.fixture
    def sample_quiz_session():
        """Create sample quiz session for testing."""
>       return QuizSession(
            id="session-123",
            user_id="user-456",
            start_time=datetime(2023, 1, 1, 12, 0, 0),
            end_time=datetime(2023, 1, 1, 12, 30, 0),
            status=SessionStatus.COMPLETED,
            total_problems=10,
            correct_answers=8,
            difficulty_low=1,
            difficulty_high=5,
            problem_type="addition"
        )
E       TypeError: QuizSession.__init__() got an unexpected keyword argument 'difficulty_low'. Did you mean 'difficulty_level'?

tests/infrastructure/database/repositories/test_quiz_repository.py:36: TypeError
______ ERROR at setup of TestCreateSession.test_create_session_exception _______

    @pytest.fixture
    def sample_quiz_session():
        """Create sample quiz session for testing."""
>       return QuizSession(
            id="session-123",
            user_id="user-456",
            start_time=datetime(2023, 1, 1, 12, 0, 0),
            end_time=datetime(2023, 1, 1, 12, 30, 0),
            status=SessionStatus.COMPLETED,
            total_problems=10,
            correct_answers=8,
            difficulty_low=1,
            difficulty_high=5,
            problem_type="addition"
        )
E       TypeError: QuizSession.__init__() got an unexpected keyword argument 'difficulty_low'. Did you mean 'difficulty_level'?

tests/infrastructure/database/repositories/test_quiz_repository.py:36: TypeError
___ ERROR at setup of TestCreateSession.test_create_session_no_data_returned ___

    @pytest.fixture
    def sample_quiz_session():
        """Create sample quiz session for testing."""
>       return QuizSession(
            id="session-123",
            user_id="user-456",
            start_time=datetime(2023, 1, 1, 12, 0, 0),
            end_time=datetime(2023, 1, 1, 12, 30, 0),
            status=SessionStatus.COMPLETED,
            total_problems=10,
            correct_answers=8,
            difficulty_low=1,
            difficulty_high=5,
            problem_type="addition"
        )
E       TypeError: QuizSession.__init__() got an unexpected keyword argument 'difficulty_low'. Did you mean 'difficulty_level'?

tests/infrastructure/database/repositories/test_quiz_repository.py:36: TypeError
_______ ERROR at setup of TestUpdateSession.test_update_session_success ________

    @pytest.fixture
    def sample_quiz_session():
        """Create sample quiz session for testing."""
>       return QuizSession(
            id="session-123",
            user_id="user-456",
            start_time=datetime(2023, 1, 1, 12, 0, 0),
            end_time=datetime(2023, 1, 1, 12, 30, 0),
            status=SessionStatus.COMPLETED,
            total_problems=10,
            correct_answers=8,
            difficulty_low=1,
            difficulty_high=5,
            problem_type="addition"
        )
E       TypeError: QuizSession.__init__() got an unexpected keyword argument 'difficulty_low'. Did you mean 'difficulty_level'?

tests/infrastructure/database/repositories/test_quiz_repository.py:36: TypeError
______ ERROR at setup of TestUpdateSession.test_update_session_exception _______

    @pytest.fixture
    def sample_quiz_session():
        """Create sample quiz session for testing."""
>       return QuizSession(
            id="session-123",
            user_id="user-456",
            start_time=datetime(2023, 1, 1, 12, 0, 0),
            end_time=datetime(2023, 1, 1, 12, 30, 0),
            status=SessionStatus.COMPLETED,
            total_problems=10,
            correct_answers=8,
            difficulty_low=1,
            difficulty_high=5,
            problem_type="addition"
        )
E       TypeError: QuizSession.__init__() got an unexpected keyword argument 'difficulty_low'. Did you mean 'difficulty_level'?

tests/infrastructure/database/repositories/test_quiz_repository.py:36: TypeError
___ ERROR at setup of TestUpdateSession.test_update_session_no_data_returned ___

    @pytest.fixture
    def sample_quiz_session():
        """Create sample quiz session for testing."""
>       return QuizSession(
            id="session-123",
            user_id="user-456",
            start_time=datetime(2023, 1, 1, 12, 0, 0),
            end_time=datetime(2023, 1, 1, 12, 30, 0),
            status=SessionStatus.COMPLETED,
            total_problems=10,
            correct_answers=8,
            difficulty_low=1,
            difficulty_high=5,
            problem_type="addition"
        )
E       TypeError: QuizSession.__init__() got an unexpected keyword argument 'difficulty_low'. Did you mean 'difficulty_level'?

tests/infrastructure/database/repositories/test_quiz_repository.py:36: TypeError
_________ ERROR at setup of TestSaveAttempt.test_save_attempt_success __________

    @pytest.fixture
    def sample_problem_attempt():
        """Create sample problem attempt for testing."""
>       return ProblemAttempt(
            id="attempt-123",
            session_id="session-456",
            problem_text="2 + 3 = ?",
            correct_answer="5",
            user_answer="5",
            is_correct=True,
            timestamp=datetime(2023, 1, 1, 12, 15, 0),
            response_time=2.5
        )
E       TypeError: ProblemAttempt.__init__() got an unexpected keyword argument 'problem_text'

tests/infrastructure/database/repositories/test_quiz_repository.py:70: TypeError
________ ERROR at setup of TestSaveAttempt.test_save_attempt_exception _________

    @pytest.fixture
    def sample_problem_attempt():
        """Create sample problem attempt for testing."""
>       return ProblemAttempt(
            id="attempt-123",
            session_id="session-456",
            problem_text="2 + 3 = ?",
            correct_answer="5",
            user_answer="5",
            is_correct=True,
            timestamp=datetime(2023, 1, 1, 12, 15, 0),
            response_time=2.5
        )
E       TypeError: ProblemAttempt.__init__() got an unexpected keyword argument 'problem_text'

tests/infrastructure/database/repositories/test_quiz_repository.py:70: TypeError
_____ ERROR at setup of TestSaveAttempt.test_save_attempt_no_data_returned _____

    @pytest.fixture
    def sample_problem_attempt():
        """Create sample problem attempt for testing."""
>       return ProblemAttempt(
            id="attempt-123",
            session_id="session-456",
            problem_text="2 + 3 = ?",
            correct_answer="5",
            user_answer="5",
            is_correct=True,
            timestamp=datetime(2023, 1, 1, 12, 15, 0),
            response_time=2.5
        )
E       TypeError: ProblemAttempt.__init__() got an unexpected keyword argument 'problem_text'

tests/infrastructure/database/repositories/test_quiz_repository.py:70: TypeError
_ ERROR at setup of TestIncrementSessionStats.test_increment_session_stats_success_correct _

    @pytest.fixture
    def sample_quiz_session():
        """Create sample quiz session for testing."""
>       return QuizSession(
            id="session-123",
            user_id="user-456",
            start_time=datetime(2023, 1, 1, 12, 0, 0),
            end_time=datetime(2023, 1, 1, 12, 30, 0),
            status=SessionStatus.COMPLETED,
            total_problems=10,
            correct_answers=8,
            difficulty_low=1,
            difficulty_high=5,
            problem_type="addition"
        )
E       TypeError: QuizSession.__init__() got an unexpected keyword argument 'difficulty_low'. Did you mean 'difficulty_level'?

tests/infrastructure/database/repositories/test_quiz_repository.py:36: TypeError
_ ERROR at setup of TestIncrementSessionStats.test_increment_session_stats_success_incorrect _

    @pytest.fixture
    def sample_quiz_session():
        """Create sample quiz session for testing."""
>       return QuizSession(
            id="session-123",
            user_id="user-456",
            start_time=datetime(2023, 1, 1, 12, 0, 0),
            end_time=datetime(2023, 1, 1, 12, 30, 0),
            status=SessionStatus.COMPLETED,
            total_problems=10,
            correct_answers=8,
            difficulty_low=1,
            difficulty_high=5,
            problem_type="addition"
        )
E       TypeError: QuizSession.__init__() got an unexpected keyword argument 'difficulty_low'. Did you mean 'difficulty_level'?

tests/infrastructure/database/repositories/test_quiz_repository.py:36: TypeError
_ ERROR at setup of TestIncrementSessionStats.test_increment_session_stats_exception _

    @pytest.fixture
    def sample_quiz_session():
        """Create sample quiz session for testing."""
>       return QuizSession(
            id="session-123",
            user_id="user-456",
            start_time=datetime(2023, 1, 1, 12, 0, 0),
            end_time=datetime(2023, 1, 1, 12, 30, 0),
            status=SessionStatus.COMPLETED,
            total_problems=10,
            correct_answers=8,
            difficulty_low=1,
            difficulty_high=5,
            problem_type="addition"
        )
E       TypeError: QuizSession.__init__() got an unexpected keyword argument 'difficulty_low'. Did you mean 'difficulty_level'?

tests/infrastructure/database/repositories/test_quiz_repository.py:36: TypeError
_ ERROR at setup of TestIncrementSessionStats.test_increment_session_stats_update_returns_none _

    @pytest.fixture
    def sample_quiz_session():
        """Create sample quiz session for testing."""
>       return QuizSession(
            id="session-123",
            user_id="user-456",
            start_time=datetime(2023, 1, 1, 12, 0, 0),
            end_time=datetime(2023, 1, 1, 12, 30, 0),
            status=SessionStatus.COMPLETED,
            total_problems=10,
            correct_answers=8,
            difficulty_low=1,
            difficulty_high=5,
            problem_type="addition"
        )
E       TypeError: QuizSession.__init__() got an unexpected keyword argument 'difficulty_low'. Did you mean 'difficulty_level'?

tests/infrastructure/database/repositories/test_quiz_repository.py:36: TypeError
=================================== FAILURES ===================================
______ TestProblemAttemptFromDict.test_from_dict_with_z_suffix_timestamp _______

self = <tests.domain.models.test_problem_attempt.TestProblemAttemptFromDict object at 0x10f28f490>

    def test_from_dict_with_z_suffix_timestamp(self):
        """Test creating ProblemAttempt with Z-suffix timestamp."""
        data = {
            "id": "attempt-123",
            "session_id": "session-456",
            "problem": "5 * 2 = ?",
            "correct_answer": 10,
            "is_correct": True,
            "response_time_ms": 2000,
            "timestamp": "2023-01-01T12:15:30Z",
            "user_answer": 10
        }
    
        attempt = ProblemAttempt.from_dict(data)
    
        # Z should be replaced with +00:00 timezone info
>       assert attempt.timestamp == datetime(2023, 1, 1, 12, 15, 30)
E       AssertionError: assert datetime.datetime(2023, 1, 1, 12, 15, 30, tzinfo=datetime.timezone.utc) == datetime.datetime(2023, 1, 1, 12, 15, 30)
E        +  where datetime.datetime(2023, 1, 1, 12, 15, 30, tzinfo=datetime.timezone.utc) = ProblemAttempt(id='attempt-123', session_id='session-456', problem='5 * 2 = ?', correct_answer=10, is_correct=True, response_time_ms=2000, timestamp=datetime.datetime(2023, 1, 1, 12, 15, 30, tzinfo=datetime.timezone.utc), user_answer=10).timestamp
E        +  and   datetime.datetime(2023, 1, 1, 12, 15, 30) = datetime(2023, 1, 1, 12, 15, 30)

tests/domain/models/test_problem_attempt.py:245: AssertionError
______ TestProblemAttemptFromDict.test_from_dict_with_timezone_timestamp _______

self = <tests.domain.models.test_problem_attempt.TestProblemAttemptFromDict object at 0x10f31dd90>

    def test_from_dict_with_timezone_timestamp(self):
        """Test creating ProblemAttempt with timezone-aware timestamp."""
        data = {
            "id": "attempt-123",
            "session_id": "session-456",
            "problem": "15 - 8 = ?",
            "correct_answer": 7,
            "is_correct": True,
            "response_time_ms": 1900,
            "timestamp": "2023-01-01T12:15:30+00:00",
            "user_answer": 7
        }
    
        attempt = ProblemAttempt.from_dict(data)
    
>       assert attempt.timestamp == datetime(2023, 1, 1, 12, 15, 30)
E       AssertionError: assert datetime.datetime(2023, 1, 1, 12, 15, 30, tzinfo=datetime.timezone.utc) == datetime.datetime(2023, 1, 1, 12, 15, 30)
E        +  where datetime.datetime(2023, 1, 1, 12, 15, 30, tzinfo=datetime.timezone.utc) = ProblemAttempt(id='attempt-123', session_id='session-456', problem='15 - 8 = ?', correct_answer=7, is_correct=True, response_time_ms=1900, timestamp=datetime.datetime(2023, 1, 1, 12, 15, 30, tzinfo=datetime.timezone.utc), user_answer=7).timestamp
E        +  and   datetime.datetime(2023, 1, 1, 12, 15, 30) = datetime(2023, 1, 1, 12, 15, 30)

tests/domain/models/test_problem_attempt.py:262: AssertionError
_______ TestQuizSessionFromDict.test_from_dict_with_z_suffix_timestamps ________

self = <tests.domain.models.test_quiz_session.TestQuizSessionFromDict object at 0x10f354510>

    def test_from_dict_with_z_suffix_timestamps(self):
        """Test creating QuizSession with Z-suffix timestamps."""
        data = {
            "id": "session-123",
            "user_id": "user-456",
            "quiz_type": "addition",
            "difficulty_level": 1,
            "start_time": "2023-01-01T12:00:00Z",
            "end_time": "2023-01-01T12:30:00Z"
        }
    
        session = QuizSession.from_dict(data)
    
        # Z should be replaced with +00:00 timezone info
>       assert session.start_time == datetime(2023, 1, 1, 12, 0, 0)
E       AssertionError: assert datetime.datetime(2023, 1, 1, 12, 0, tzinfo=datetime.timezone.utc) == datetime.datetime(2023, 1, 1, 12, 0)
E        +  where datetime.datetime(2023, 1, 1, 12, 0, tzinfo=datetime.timezone.utc) = QuizSession(id='session-123', user_id='user-456', quiz_type=<QuizType.ADDITION: 'addition'>, difficulty_level=1, start_time=datetime.datetime(2023, 1, 1, 12, 0, tzinfo=datetime.timezone.utc), total_problems=0, correct_answers=0, status=<SessionStatus.ACTIVE: 'active'>, end_time=datetime.datetime(2023, 1, 1, 12, 30, tzinfo=datetime.timezone.utc)).start_time
E        +  and   datetime.datetime(2023, 1, 1, 12, 0) = datetime(2023, 1, 1, 12, 0, 0)

tests/domain/models/test_quiz_session.py:328: AssertionError
_______ TestQuizSessionFromDict.test_from_dict_with_timezone_timestamps ________

self = <tests.domain.models.test_quiz_session.TestQuizSessionFromDict object at 0x10f354640>

    def test_from_dict_with_timezone_timestamps(self):
        """Test creating QuizSession with timezone-aware timestamps."""
        data = {
            "id": "session-123",
            "user_id": "user-456",
            "quiz_type": "addition",
            "difficulty_level": 1,
            "start_time": "2023-01-01T12:00:00+00:00",
            "end_time": "2023-01-01T12:30:00+00:00"
        }
    
        session = QuizSession.from_dict(data)
    
>       assert session.start_time == datetime(2023, 1, 1, 12, 0, 0)
E       AssertionError: assert datetime.datetime(2023, 1, 1, 12, 0, tzinfo=datetime.timezone.utc) == datetime.datetime(2023, 1, 1, 12, 0)
E        +  where datetime.datetime(2023, 1, 1, 12, 0, tzinfo=datetime.timezone.utc) = QuizSession(id='session-123', user_id='user-456', quiz_type=<QuizType.ADDITION: 'addition'>, difficulty_level=1, start_time=datetime.datetime(2023, 1, 1, 12, 0, tzinfo=datetime.timezone.utc), total_problems=0, correct_answers=0, status=<SessionStatus.ACTIVE: 'active'>, end_time=datetime.datetime(2023, 1, 1, 12, 30, tzinfo=datetime.timezone.utc)).start_time
E        +  and   datetime.datetime(2023, 1, 1, 12, 0) = datetime(2023, 1, 1, 12, 0, 0)

tests/domain/models/test_quiz_session.py:344: AssertionError
_______ TestGetCurrentUser.test_get_current_user_display_name_fallbacks ________

self = <MagicMock name='get_or_create_user_profile' id='4553010080'>
args = ('test-user-123', 'test@example.com', 'Metadata Name'), kwargs = {}
expected = call('test-user-123', 'test@example.com', 'Metadata Name')
actual = call('test-user-123', 'test@example.com', None)
_error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x10f5d51c0>
cause = None

    def assert_called_with(self, /, *args, **kwargs):
        """assert that the last call was made with the specified arguments.
    
        Raises an AssertionError if the args and keyword args passed in are
        different to the last call to the mock."""
        if self.call_args is None:
            expected = self._format_mock_call_signature(args, kwargs)
            actual = 'not called.'
            error_message = ('expected call not found.\nExpected: %s\n  Actual: %s'
                    % (expected, actual))
            raise AssertionError(error_message)
    
        def _error_message():
            msg = self._format_mock_failure_message(args, kwargs)
            return msg
        expected = self._call_matcher(_Call((args, kwargs), two=True))
        actual = self._call_matcher(self.call_args)
        if actual != expected:
            cause = expected if isinstance(expected, Exception) else None
>           raise AssertionError(_error_message()) from cause
E           AssertionError: expected call not found.
E           Expected: get_or_create_user_profile('test-user-123', 'test@example.com', 'Metadata Name')
E             Actual: get_or_create_user_profile('test-user-123', 'test@example.com', None)

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:979: AssertionError

During handling of the above exception, another exception occurred:

self = <tests.domain.services.test_user_service.TestGetCurrentUser object at 0x10f2be990>
user_service = <src.domain.services.user_service.UserService object at 0x10f38a3c0>
mock_user_repository = <Mock spec='UserRepository' id='4553013440'>
sample_user = User(id='test-user-123', email='test@example.com', display_name='Test User', created_at=datetime.datetime(2023, 1, 1, 12, 0), last_active=datetime.datetime(2023, 1, 1, 12, 0))

    def test_get_current_user_display_name_fallbacks(self, user_service, mock_user_repository, sample_user):
        """Test display name fallback logic."""
        # Setup
        mock_user_repository.supabase_manager.is_authenticated.return_value = True
        mock_client = Mock()
        mock_session = Mock()
    
        # Test case 1: name in metadata
        auth_user_1 = Mock()
        auth_user_1.id = "test-user-123"
        auth_user_1.email = "test@example.com"
        auth_user_1.user_metadata = {"name": "Metadata Name"}
        mock_session.user = auth_user_1
        mock_client.auth.get_session.return_value = mock_session
        mock_user_repository.supabase_manager.get_client.return_value = mock_client
        mock_user_repository.get_user_profile.return_value = None
    
        with patch.object(user_service, 'get_or_create_user_profile', return_value=sample_user) as mock_get_or_create:
            user_service.get_current_user(force_refresh=False)
>           mock_get_or_create.assert_called_with("test-user-123", "test@example.com", "Metadata Name")
E           AssertionError: expected call not found.
E           Expected: get_or_create_user_profile('test-user-123', 'test@example.com', 'Metadata Name')
E             Actual: get_or_create_user_profile('test-user-123', 'test@example.com', None)
E           
E           pytest introspection follows:
E           
E           Args:
E           assert ('test-user-1...le.com', None) == ('test-user-1...etadata Name')
E             
E             At index 2 diff: None != 'Metadata Name'
E             
E             Full diff:
E               (
E                   'test-user-123',
E                   'test@example.com',...
E             
E             ...Full output truncated (3 lines hidden), use '-vv' to show

tests/domain/services/test_user_service.py:445: AssertionError
___________________ TestGetSession.test_get_session_success ____________________

self = <tests.infrastructure.database.repositories.test_quiz_repository.TestGetSession object at 0x10f3b07d0>
quiz_repository = <src.infrastructure.database.repositories.quiz_repository.QuizRepository object at 0x10f698cd0>
mock_client = <Mock name='mock.get_client()' id='4553004704'>
sample_session_dict = {'correct_answers': 8, 'difficulty_high': 5, 'difficulty_low': 1, 'end_time': '2023-01-01T12:30:00', ...}

    def test_get_session_success(self, quiz_repository, mock_client, sample_session_dict):
        """Test successful session retrieval."""
        mock_response = Mock()
        mock_response.data = [sample_session_dict]
        mock_client.table.return_value.select.return_value.eq.return_value.execute.return_value = mock_response
    
        result = quiz_repository.get_session("session-123")
    
>       assert result is not None
E       assert None is not None

tests/infrastructure/database/repositories/test_quiz_repository.py:176: AssertionError
----------------------------- Captured stdout call -----------------------------
Error fetching quiz session: 'quiz_type'
______________ TestCompleteSession.test_complete_session_success _______________

self = <tests.infrastructure.database.repositories.test_quiz_repository.TestCompleteSession object at 0x10f3b0cd0>
quiz_repository = <src.infrastructure.database.repositories.quiz_repository.QuizRepository object at 0x10f68aee0>
mock_client = <Mock name='mock.get_client()' id='4553002016'>
sample_session_dict = {'correct_answers': 8, 'difficulty_high': 5, 'difficulty_low': 1, 'end_time': '2023-01-01T12:30:00', ...}

    def test_complete_session_success(self, quiz_repository, mock_client, sample_session_dict):
        """Test successful session completion."""
        mock_response = Mock()
        mock_response.data = [sample_session_dict]
        mock_client.table.return_value.update.return_value.eq.return_value.execute.return_value = mock_response
    
        with patch('src.infrastructure.database.repositories.quiz_repository.datetime') as mock_datetime:
            mock_datetime.now.return_value.isoformat.return_value = "2023-01-01T12:30:00"
            result = quiz_repository.complete_session("session-123")
    
>       assert result is not None
E       assert None is not None

tests/infrastructure/database/repositories/test_quiz_repository.py:280: AssertionError
----------------------------- Captured stdout call -----------------------------
Error completing quiz session: 'quiz_type'
______________ TestGetUserSessions.test_get_user_sessions_success ______________

self = <tests.infrastructure.database.repositories.test_quiz_repository.TestGetUserSessions object at 0x10f3b0f50>
quiz_repository = <src.infrastructure.database.repositories.quiz_repository.QuizRepository object at 0x10f6999a0>
mock_client = <Mock name='mock.get_client()' id='4553014784'>
sample_session_dict = {'correct_answers': 8, 'difficulty_high': 5, 'difficulty_low': 1, 'end_time': '2023-01-01T12:30:00', ...}

    def test_get_user_sessions_success(self, quiz_repository, mock_client, sample_session_dict):
        """Test successful user sessions retrieval."""
        mock_response = Mock()
        mock_response.data = [sample_session_dict, sample_session_dict]
        mock_client.table.return_value.select.return_value.eq.return_value.order.return_value.limit.return_value.execute.return_value = mock_response
    
        result = quiz_repository.get_user_sessions("user-456")
    
>       assert len(result) == 2
E       assert 0 == 2
E        +  where 0 = len([])

tests/infrastructure/database/repositories/test_quiz_repository.py:326: AssertionError
----------------------------- Captured stdout call -----------------------------
Error fetching user sessions: 'quiz_type'
________ TestGetUserSessions.test_get_user_sessions_with_status_filter _________

self = <tests.infrastructure.database.repositories.test_quiz_repository.TestGetUserSessions object at 0x10f3b1090>
quiz_repository = <src.infrastructure.database.repositories.quiz_repository.QuizRepository object at 0x10f6500a0>
mock_client = <Mock name='mock.get_client()' id='4553011424'>
sample_session_dict = {'correct_answers': 8, 'difficulty_high': 5, 'difficulty_low': 1, 'end_time': '2023-01-01T12:30:00', ...}

    def test_get_user_sessions_with_status_filter(self, quiz_repository, mock_client, sample_session_dict):
        """Test get_user_sessions with status filter."""
        mock_response = Mock()
        mock_response.data = [sample_session_dict]
    
        # Mock the chain of method calls for status filtering
        mock_query = Mock()
        mock_query.eq.return_value.order.return_value.limit.return_value.execute.return_value = mock_response
        mock_client.table.return_value.select.return_value.eq.return_value = mock_query
    
        result = quiz_repository.get_user_sessions("user-456", limit=25, status=SessionStatus.COMPLETED)
    
>       assert len(result) == 1
E       assert 0 == 1
E        +  where 0 = len([])

tests/infrastructure/database/repositories/test_quiz_repository.py:348: AssertionError
----------------------------- Captured stdout call -----------------------------
Error fetching user sessions: 'quiz_type'
___________ TestGetSessionAttempts.test_get_session_attempts_success ___________

self = <tests.infrastructure.database.repositories.test_quiz_repository.TestGetSessionAttempts object at 0x10f3b1450>
quiz_repository = <src.infrastructure.database.repositories.quiz_repository.QuizRepository object at 0x10f7474d0>
mock_client = <Mock name='mock.get_client()' id='4553397248'>
sample_attempt_dict = {'correct_answer': '5', 'id': 'attempt-123', 'is_correct': True, 'problem_text': '2 + 3 = ?', ...}

    def test_get_session_attempts_success(self, quiz_repository, mock_client, sample_attempt_dict):
        """Test successful session attempts retrieval."""
        mock_response = Mock()
        mock_response.data = [sample_attempt_dict, sample_attempt_dict]
        mock_client.table.return_value.select.return_value.eq.return_value.order.return_value.execute.return_value = mock_response
    
        result = quiz_repository.get_session_attempts("session-456")
    
>       assert len(result) == 2
E       assert 0 == 2
E        +  where 0 = len([])

tests/infrastructure/database/repositories/test_quiz_repository.py:461: AssertionError
----------------------------- Captured stdout call -----------------------------
Error fetching session attempts: 'problem'
____________________ TestOAuthServer.test_oauth_server_init ____________________

self = <tests.infrastructure.database.test_supabase_manager.TestOAuthServer object at 0x10f3b2710>

    def test_oauth_server_init(self):
        """Test OAuthServer initialization."""
        handler_class = Mock()
        server = OAuthServer(("localhost", 8080), handler_class)
    
        assert server.auth_result is None
>       assert server.server_address == ("localhost", 8080)
E       AssertionError: assert ('127.0.0.1', 8080) == ('localhost', 8080)
E         
E         At index 0 diff: '127.0.0.1' != 'localhost'
E         
E         Full diff:
E           (
E         -     'localhost',
E         +     '127.0.0.1',
E               8080,
E           )

tests/infrastructure/database/test_supabase_manager.py:54: AssertionError
_____________ TestOAuthCallbackHandler.test_log_message_suppressed _____________

self = <tests.infrastructure.database.test_supabase_manager.TestOAuthCallbackHandler object at 0x10f3b2d50>

    def test_log_message_suppressed(self):
        """Test that log_message is suppressed."""
>       handler = OAuthCallbackHandler(Mock(), Mock(), Mock())
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/infrastructure/database/test_supabase_manager.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/socketserver.py:766: in __init__
    self.handle()
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/server.py:436: in handle
    self.handle_one_request()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <src.infrastructure.database.supabase_manager.OAuthCallbackHandler object at 0x10f4cef90>

    def handle_one_request(self):
        """Handle a single HTTP request.
    
        You normally don't need to override this method; see the class
        __doc__ string for information on how to handle specific HTTP
        commands such as GET and POST.
    
        """
        try:
            self.raw_requestline = self.rfile.readline(65537)
>           if len(self.raw_requestline) > 65536:
               ^^^^^^^^^^^^^^^^^^^^^^^^^
E           TypeError: object of type 'Mock' has no len()

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/server.py:405: TypeError
_____________ TestOAuthCallbackHandler.test_do_get_favicon_request _____________

self = <tests.infrastructure.database.test_supabase_manager.TestOAuthCallbackHandler object at 0x10f3b2e90>

    def test_do_get_favicon_request(self):
        """Test handling of favicon requests."""
        mock_server = Mock(spec=OAuthServer)
        mock_server.auth_result = None
    
>       handler = OAuthCallbackHandler(Mock(), Mock(), mock_server)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/infrastructure/database/test_supabase_manager.py:73: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/socketserver.py:766: in __init__
    self.handle()
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/server.py:436: in handle
    self.handle_one_request()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <src.infrastructure.database.supabase_manager.OAuthCallbackHandler object at 0x10f66d810>

    def handle_one_request(self):
        """Handle a single HTTP request.
    
        You normally don't need to override this method; see the class
        __doc__ string for information on how to handle specific HTTP
        commands such as GET and POST.
    
        """
        try:
            self.raw_requestline = self.rfile.readline(65537)
>           if len(self.raw_requestline) > 65536:
               ^^^^^^^^^^^^^^^^^^^^^^^^^
E           TypeError: object of type 'Mock' has no len()

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/server.py:405: TypeError
__________ TestOAuthCallbackHandler.test_do_get_already_authenticated __________

self = <tests.infrastructure.database.test_supabase_manager.TestOAuthCallbackHandler object at 0x10f357ce0>

    def test_do_get_already_authenticated(self):
        """Test handling when authentication already completed."""
        mock_server = Mock(spec=OAuthServer)
        mock_server.auth_result = {"success": True}
    
>       handler = OAuthCallbackHandler(Mock(), Mock(), mock_server)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/infrastructure/database/test_supabase_manager.py:88: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/socketserver.py:766: in __init__
    self.handle()
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/server.py:436: in handle
    self.handle_one_request()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <src.infrastructure.database.supabase_manager.OAuthCallbackHandler object at 0x10f66d090>

    def handle_one_request(self):
        """Handle a single HTTP request.
    
        You normally don't need to override this method; see the class
        __doc__ string for information on how to handle specific HTTP
        commands such as GET and POST.
    
        """
        try:
            self.raw_requestline = self.rfile.readline(65537)
>           if len(self.raw_requestline) > 65536:
               ^^^^^^^^^^^^^^^^^^^^^^^^^
E           TypeError: object of type 'Mock' has no len()

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/server.py:405: TypeError
____________ TestOAuthCallbackHandler.test_do_get_success_callback _____________

self = <tests.infrastructure.database.test_supabase_manager.TestOAuthCallbackHandler object at 0x10f357e10>

    def test_do_get_success_callback(self):
        """Test successful OAuth callback."""
        mock_server = Mock(spec=OAuthServer)
        mock_server.auth_result = None
    
>       handler = OAuthCallbackHandler(Mock(), Mock(), mock_server)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/infrastructure/database/test_supabase_manager.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/socketserver.py:766: in __init__
    self.handle()
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/server.py:436: in handle
    self.handle_one_request()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <src.infrastructure.database.supabase_manager.OAuthCallbackHandler object at 0x10f64dba0>

    def handle_one_request(self):
        """Handle a single HTTP request.
    
        You normally don't need to override this method; see the class
        __doc__ string for information on how to handle specific HTTP
        commands such as GET and POST.
    
        """
        try:
            self.raw_requestline = self.rfile.readline(65537)
>           if len(self.raw_requestline) > 65536:
               ^^^^^^^^^^^^^^^^^^^^^^^^^
E           TypeError: object of type 'Mock' has no len()

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/server.py:405: TypeError
_____________ TestOAuthCallbackHandler.test_do_get_error_callback ______________

self = <tests.infrastructure.database.test_supabase_manager.TestOAuthCallbackHandler object at 0x10f3969f0>

    def test_do_get_error_callback(self):
        """Test error OAuth callback."""
        mock_server = Mock(spec=OAuthServer)
        mock_server.auth_result = None
    
>       handler = OAuthCallbackHandler(Mock(), Mock(), mock_server)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/infrastructure/database/test_supabase_manager.py:129: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/socketserver.py:766: in __init__
    self.handle()
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/server.py:436: in handle
    self.handle_one_request()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <src.infrastructure.database.supabase_manager.OAuthCallbackHandler object at 0x10f53aea0>

    def handle_one_request(self):
        """Handle a single HTTP request.
    
        You normally don't need to override this method; see the class
        __doc__ string for information on how to handle specific HTTP
        commands such as GET and POST.
    
        """
        try:
            self.raw_requestline = self.rfile.readline(65537)
>           if len(self.raw_requestline) > 65536:
               ^^^^^^^^^^^^^^^^^^^^^^^^^
E           TypeError: object of type 'Mock' has no len()

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/server.py:405: TypeError
____________ TestOAuthCallbackHandler.test_do_get_unknown_callback _____________

self = <tests.infrastructure.database.test_supabase_manager.TestOAuthCallbackHandler object at 0x10f3d47c0>

    def test_do_get_unknown_callback(self):
        """Test unknown callback."""
        mock_server = Mock(spec=OAuthServer)
        mock_server.auth_result = None
    
>       handler = OAuthCallbackHandler(Mock(), Mock(), mock_server)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/infrastructure/database/test_supabase_manager.py:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/socketserver.py:766: in __init__
    self.handle()
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/server.py:436: in handle
    self.handle_one_request()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <src.infrastructure.database.supabase_manager.OAuthCallbackHandler object at 0x10f56ccb0>

    def handle_one_request(self):
        """Handle a single HTTP request.
    
        You normally don't need to override this method; see the class
        __doc__ string for information on how to handle specific HTTP
        commands such as GET and POST.
    
        """
        try:
            self.raw_requestline = self.rfile.readline(65537)
>           if len(self.raw_requestline) > 65536:
               ^^^^^^^^^^^^^^^^^^^^^^^^^
E           TypeError: object of type 'Mock' has no len()

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/server.py:405: TypeError
____________ TestSignInWithGoogle.test_sign_in_with_google_success _____________

self = <tests.infrastructure.database.test_supabase_manager.TestSignInWithGoogle object at 0x10f440510>
mock_print = <MagicMock name='print' id='4553397584'>
mock_time = <MagicMock name='time' id='4551669616'>
mock_sleep = <MagicMock name='sleep' id='4553009072'>
mock_create_client = <MagicMock name='create_client' id='4553005712'>
mock_start_server = <MagicMock name='start_oauth_server' id='4553011424'>
mock_webbrowser = <MagicMock name='open' id='4553001344'>
supabase_manager = <src.infrastructure.database.supabase_manager.SupabaseManager object at 0x113ba4750>

    @patch('src.infrastructure.database.supabase_manager.webbrowser.open')
    @patch('src.infrastructure.database.supabase_manager.start_oauth_server')
    @patch('src.infrastructure.database.supabase_manager.create_client')
    @patch('src.infrastructure.database.supabase_manager.time.sleep')
    @patch('src.infrastructure.database.supabase_manager.time.time')
    @patch('builtins.print')
    def test_sign_in_with_google_success(self, mock_print, mock_time, mock_sleep, mock_create_client, mock_start_server, mock_webbrowser, supabase_manager):
        """Test successful sign_in_with_google."""
        # Mock server with successful auth result
        mock_server = Mock()
        mock_server.auth_result = {
            "success": True,
            "code": "test_auth_code"
        }
        mock_start_server.return_value = mock_server
    
        # Mock OAuth client
        mock_oauth_client = Mock()
        mock_create_client.return_value = mock_oauth_client
    
        mock_oauth_response = Mock()
        mock_oauth_response.url = "https://oauth.example.com"
        mock_oauth_client.auth.sign_in_with_oauth.return_value = mock_oauth_response
    
        # Mock PKCE storage
        mock_storage = Mock()
    
        # Mock session exchange
        mock_user = Mock()
        mock_user.id = "user123"
        mock_user.email = "test@example.com"
        mock_user.user_metadata = {"full_name": "Test User"}
        mock_user.app_metadata = {"provider": "google"}
        mock_user.last_sign_in_at = "2023-01-01T00:00:00Z"
    
        mock_session = Mock()
        mock_session.access_token = "access_token_123"
        mock_session.refresh_token = "refresh_token_123"
        mock_session.expires_at = 1234567890
        mock_session.provider_token = "provider_token_123"
        mock_session.provider_refresh_token = "provider_refresh_123"
    
        mock_session_response = Mock()
        mock_session_response.session = mock_session
        mock_session_response.user = mock_user
    
        mock_oauth_client.auth.exchange_code_for_session.return_value = mock_session_response
    
        # Mock time to prevent timeout
        mock_time.side_effect = [0, 1, 2]  # Stay well under timeout
    
>       with patch('src.infrastructure.database.supabase_manager.PKCEStorage') as mock_pkce_class:
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/infrastructure/database/test_supabase_manager.py:521: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x10de75630>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'src.infrastructure.database.supabase_manager' from '/Users/barrymolina/Projects/mathsfun/src/infrastructure/database/supabase_manager.py'> does not have the attribute 'PKCEStorage'

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: AttributeError
________ TestSignInWithGoogle.test_sign_in_with_google_no_code_verifier ________

self = <tests.infrastructure.database.test_supabase_manager.TestSignInWithGoogle object at 0x10f440640>
mock_print = <MagicMock name='print' id='4553009744'>
mock_time = <MagicMock name='time' id='4553002352'>
mock_sleep = <MagicMock name='sleep' id='4553003360'>
mock_create_client = <MagicMock name='create_client' id='4552999328'>
mock_start_server = <MagicMock name='start_oauth_server' id='4553000000'>
mock_webbrowser = <MagicMock name='open' id='4553002016'>
supabase_manager = <src.infrastructure.database.supabase_manager.SupabaseManager object at 0x113a24a50>

    @patch('src.infrastructure.database.supabase_manager.webbrowser.open')
    @patch('src.infrastructure.database.supabase_manager.start_oauth_server')
    @patch('src.infrastructure.database.supabase_manager.create_client')
    @patch('src.infrastructure.database.supabase_manager.time.sleep')
    @patch('src.infrastructure.database.supabase_manager.time.time')
    @patch('builtins.print')
    def test_sign_in_with_google_no_code_verifier(self, mock_print, mock_time, mock_sleep, mock_create_client, mock_start_server, mock_webbrowser, supabase_manager):
        """Test sign_in_with_google when code verifier is missing."""
        mock_server = Mock()
        mock_server.auth_result = {
            "success": True,
            "code": "test_auth_code"
        }
        mock_start_server.return_value = mock_server
    
        mock_oauth_client = Mock()
        mock_create_client.return_value = mock_oauth_client
    
        mock_oauth_response = Mock()
        mock_oauth_response.url = "https://oauth.example.com"
        mock_oauth_client.auth.sign_in_with_oauth.return_value = mock_oauth_response
    
        mock_time.side_effect = [0, 1, 2]
    
>       with patch('src.infrastructure.database.supabase_manager.PKCEStorage') as mock_pkce_class:
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/infrastructure/database/test_supabase_manager.py:568: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x10f535fd0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'src.infrastructure.database.supabase_manager' from '/Users/barrymolina/Projects/mathsfun/src/infrastructure/database/supabase_manager.py'> does not have the attribute 'PKCEStorage'

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: AttributeError
_________ TestSignInWithGoogle.test_sign_in_with_google_exchange_fails _________

self = <tests.infrastructure.database.test_supabase_manager.TestSignInWithGoogle object at 0x10f449a30>
mock_print = <MagicMock name='print' id='4553004368'>
mock_time = <MagicMock name='time' id='4553007728'>
mock_sleep = <MagicMock name='sleep' id='4553014784'>
mock_create_client = <MagicMock name='create_client' id='4553013440'>
mock_start_server = <MagicMock name='start_oauth_server' id='4553012768'>
mock_webbrowser = <MagicMock name='open' id='4553010416'>
supabase_manager = <src.infrastructure.database.supabase_manager.SupabaseManager object at 0x10f6d11d0>

    @patch('src.infrastructure.database.supabase_manager.webbrowser.open')
    @patch('src.infrastructure.database.supabase_manager.start_oauth_server')
    @patch('src.infrastructure.database.supabase_manager.create_client')
    @patch('src.infrastructure.database.supabase_manager.time.sleep')
    @patch('src.infrastructure.database.supabase_manager.time.time')
    @patch('builtins.print')
    def test_sign_in_with_google_exchange_fails(self, mock_print, mock_time, mock_sleep, mock_create_client, mock_start_server, mock_webbrowser, supabase_manager):
        """Test sign_in_with_google when code exchange fails."""
        mock_server = Mock()
        mock_server.auth_result = {
            "success": True,
            "code": "test_auth_code"
        }
        mock_start_server.return_value = mock_server
    
        mock_oauth_client = Mock()
        mock_create_client.return_value = mock_oauth_client
    
        mock_oauth_response = Mock()
        mock_oauth_response.url = "https://oauth.example.com"
        mock_oauth_client.auth.sign_in_with_oauth.return_value = mock_oauth_response
    
        # Make exchange fail
        mock_oauth_client.auth.exchange_code_for_session.side_effect = Exception("Exchange failed")
    
        mock_time.side_effect = [0, 1, 2]
    
>       with patch('src.infrastructure.database.supabase_manager.PKCEStorage') as mock_pkce_class:
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/infrastructure/database/test_supabase_manager.py:606: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x10f5611d0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'src.infrastructure.database.supabase_manager' from '/Users/barrymolina/Projects/mathsfun/src/infrastructure/database/supabase_manager.py'> does not have the attribute 'PKCEStorage'

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: AttributeError
_______ TestSignInWithGoogle.test_sign_in_with_google_no_session_created _______

self = <tests.infrastructure.database.test_supabase_manager.TestSignInWithGoogle object at 0x10f3d4f30>
mock_print = <MagicMock name='print' id='4553404976'>
mock_time = <MagicMock name='time' id='4553399600'>
mock_sleep = <MagicMock name='sleep' id='4553398928'>
mock_create_client = <MagicMock name='create_client' id='4553394560'>
mock_start_server = <MagicMock name='start_oauth_server' id='4553400608'>
mock_webbrowser = <MagicMock name='open' id='4553400944'>
supabase_manager = <src.infrastructure.database.supabase_manager.SupabaseManager object at 0x113ae6650>

    @patch('src.infrastructure.database.supabase_manager.webbrowser.open')
    @patch('src.infrastructure.database.supabase_manager.start_oauth_server')
    @patch('src.infrastructure.database.supabase_manager.create_client')
    @patch('src.infrastructure.database.supabase_manager.time.sleep')
    @patch('src.infrastructure.database.supabase_manager.time.time')
    @patch('builtins.print')
    def test_sign_in_with_google_no_session_created(self, mock_print, mock_time, mock_sleep, mock_create_client, mock_start_server, mock_webbrowser, supabase_manager):
        """Test sign_in_with_google when no session is created."""
        mock_server = Mock()
        mock_server.auth_result = {
            "success": True,
            "code": "test_auth_code"
        }
        mock_start_server.return_value = mock_server
    
        mock_oauth_client = Mock()
        mock_create_client.return_value = mock_oauth_client
    
        mock_oauth_response = Mock()
        mock_oauth_response.url = "https://oauth.example.com"
        mock_oauth_client.auth.sign_in_with_oauth.return_value = mock_oauth_response
    
        # Mock session exchange returning no session
        mock_session_response = Mock()
        mock_session_response.session = None
        mock_oauth_client.auth.exchange_code_for_session.return_value = mock_session_response
    
        mock_time.side_effect = [0, 1, 2]
    
>       with patch('src.infrastructure.database.supabase_manager.PKCEStorage') as mock_pkce_class:
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/infrastructure/database/test_supabase_manager.py:646: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x10f5626d0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'src.infrastructure.database.supabase_manager' from '/Users/barrymolina/Projects/mathsfun/src/infrastructure/database/supabase_manager.py'> does not have the attribute 'PKCEStorage'

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: AttributeError
___________ TestGetConfigDirectory.test_get_config_directory_windows ___________

self = <tests.infrastructure.storage.test_session_storage.TestGetConfigDirectory object at 0x10f460550>

    @patch('os.name', 'nt')
    @patch.dict(os.environ, {'APPDATA': 'C:\\Users\\Test\\AppData\\Roaming'})
    def test_get_config_directory_windows(self):
        """Test config directory on Windows."""
>       storage = SessionStorage("testapp")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^

tests/infrastructure/storage/test_session_storage.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/infrastructure/storage/session_storage.py:15: in __init__
    self._config_dir = self._get_config_directory()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/infrastructure/storage/session_storage.py:28: in _get_config_directory
    return config_base / self.app_name
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:150: in __truediv__
    return self.with_segments(self, key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_abc.py:135: in with_segments
    return type(self)(*pathsegments)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'pathlib._local.WindowsPath'>
args = (WindowsPath('C:/Users/Test/AppData/Roaming'), 'testapp'), kwargs = {}

    def __new__(cls, *args, **kwargs):
>       raise UnsupportedOperation(
            f"cannot instantiate {cls.__name__!r} on your system")
E       pathlib._abc.UnsupportedOperation: cannot instantiate 'WindowsPath' on your system

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pathlib/_local.py:860: UnsupportedOperation
______ TestGetConfigDirectory.test_get_config_directory_linux_without_xdg ______

self = <tests.infrastructure.storage.test_session_storage.TestGetConfigDirectory object at 0x10f440c30>
mock_expanduser = <MagicMock name='expanduser' id='4553397920'>

    @patch('os.name', 'posix')
    @patch.dict(os.environ, {}, clear=True)
    @patch('os.path.expanduser')
    def test_get_config_directory_linux_without_xdg(self, mock_expanduser):
        """Test config directory on Linux without XDG_CONFIG_HOME."""
        mock_expanduser.return_value = "/home/test"
        storage = SessionStorage("testapp")
        config_dir = storage._get_config_directory()
>       assert str(config_dir) == "/home/test/.config/testapp"
E       AssertionError: assert '/home/test/testapp' == '/home/test/.config/testapp'
E         
E         - /home/test/.config/testapp
E         ?            --------
E         + /home/test/testapp

tests/infrastructure/storage/test_session_storage.py:101: AssertionError
----------------------------- Captured stdout call -----------------------------
Warning: Could not create config directory: [Errno 45] Operation not supported: '/home/test'
_____________ TestLoadSession.test_load_session_invalid_structure ______________

self = <MagicMock name='print' id='4553010080'>
args = ('Warning: Invalid session data structure, clearing session',)
kwargs = {}
expected = call('Warning: Invalid session data structure, clearing session')
actual = call('Warning: Session file has insecure permissions, removing it')
_error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x113b6c040>
cause = None

    def assert_called_with(self, /, *args, **kwargs):
        """assert that the last call was made with the specified arguments.
    
        Raises an AssertionError if the args and keyword args passed in are
        different to the last call to the mock."""
        if self.call_args is None:
            expected = self._format_mock_call_signature(args, kwargs)
            actual = 'not called.'
            error_message = ('expected call not found.\nExpected: %s\n  Actual: %s'
                    % (expected, actual))
            raise AssertionError(error_message)
    
        def _error_message():
            msg = self._format_mock_failure_message(args, kwargs)
            return msg
        expected = self._call_matcher(_Call((args, kwargs), two=True))
        actual = self._call_matcher(self.call_args)
        if actual != expected:
            cause = expected if isinstance(expected, Exception) else None
>           raise AssertionError(_error_message()) from cause
E           AssertionError: expected call not found.
E           Expected: print('Warning: Invalid session data structure, clearing session')
E             Actual: print('Warning: Session file has insecure permissions, removing it')

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:979: AssertionError

During handling of the above exception, another exception occurred:

self = <tests.infrastructure.storage.test_session_storage.TestLoadSession object at 0x10f3d5ae0>
session_storage = <src.infrastructure.storage.session_storage.SessionStorage object at 0x113a97850>

    def test_load_session_invalid_structure(self, session_storage):
        """Test loading with invalid session structure."""
        # Write session data missing required fields
        storage_data = {
            "session": {"access_token": "test"},  # Missing refresh_token
            "stored_at": time.time()
        }
        session_storage._session_file.write_text(json.dumps(storage_data))
    
        with patch.object(session_storage, '_clear_session') as mock_clear:
            with patch('builtins.print') as mock_print:
                result = session_storage.load_session()
    
        assert result is None
        mock_clear.assert_called_once()
>       mock_print.assert_called_with("Warning: Invalid session data structure, clearing session")
E       AssertionError: expected call not found.
E       Expected: print('Warning: Invalid session data structure, clearing session')
E         Actual: print('Warning: Session file has insecure permissions, removing it')
E       
E       pytest introspection follows:
E       
E       Args:
E       assert ('Warning: Se...removing it',) == ('Warning: In...ing session',)
E         
E         At index 0 diff: 'Warning: Session file has insecure permissions, removing it' != 'Warning: Invalid session data structure, clearing session'
E         
E         Full diff:
E           (
E         -     'Warning: Invalid session data structure, clearing session',
E         +     'Warning: Session file has insecure permissions, removing it',
E           )

tests/infrastructure/storage/test_session_storage.py:308: AssertionError
__________ TestLoadSession.test_load_session_file_not_found_exception __________

self = <MagicMock name='_clear_session' id='4553003024'>

    def assert_called_once(self):
        """assert that the mock was called only once.
        """
        if not self.call_count == 1:
            msg = ("Expected '%s' to have been called once. Called %s times.%s"
                   % (self._mock_name or 'mock',
                      self.call_count,
                      self._calls_repr()))
>           raise AssertionError(msg)
E           AssertionError: Expected '_clear_session' to have been called once. Called 0 times.

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:958: AssertionError

During handling of the above exception, another exception occurred:

self = <tests.infrastructure.storage.test_session_storage.TestLoadSession object at 0x10f3d8450>
session_storage = <src.infrastructure.storage.session_storage.SessionStorage object at 0x1138233f0>

    def test_load_session_file_not_found_exception(self, session_storage):
        """Test handling of FileNotFoundError."""
        with patch('builtins.open', side_effect=FileNotFoundError("File not found")):
            with patch.object(session_storage, '_clear_session') as mock_clear:
                with patch('builtins.print') as mock_print:
                    result = session_storage.load_session()
    
        assert result is None
>       mock_clear.assert_called_once()
E       AssertionError: Expected '_clear_session' to have been called once. Called 0 times.

tests/infrastructure/storage/test_session_storage.py:331: AssertionError
____________ TestLoadSession.test_load_session_unexpected_exception ____________

self = <MagicMock name='print' id='4553013440'>
args = ('Warning: Unexpected error loading session: Unexpected error',)
kwargs = {}
expected = call('Warning: Unexpected error loading session: Unexpected error')
actual = call('Warning: Session file has insecure permissions, removing it')
_error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x113b6cb80>
cause = None

    def assert_called_with(self, /, *args, **kwargs):
        """assert that the last call was made with the specified arguments.
    
        Raises an AssertionError if the args and keyword args passed in are
        different to the last call to the mock."""
        if self.call_args is None:
            expected = self._format_mock_call_signature(args, kwargs)
            actual = 'not called.'
            error_message = ('expected call not found.\nExpected: %s\n  Actual: %s'
                    % (expected, actual))
            raise AssertionError(error_message)
    
        def _error_message():
            msg = self._format_mock_failure_message(args, kwargs)
            return msg
        expected = self._call_matcher(_Call((args, kwargs), two=True))
        actual = self._call_matcher(self.call_args)
        if actual != expected:
            cause = expected if isinstance(expected, Exception) else None
>           raise AssertionError(_error_message()) from cause
E           AssertionError: expected call not found.
E           Expected: print('Warning: Unexpected error loading session: Unexpected error')
E             Actual: print('Warning: Session file has insecure permissions, removing it')

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:979: AssertionError

During handling of the above exception, another exception occurred:

self = <tests.infrastructure.storage.test_session_storage.TestLoadSession object at 0x10f2bfd40>
session_storage = <src.infrastructure.storage.session_storage.SessionStorage object at 0x113823af0>

    def test_load_session_unexpected_exception(self, session_storage):
        """Test handling of unexpected exceptions."""
        session_storage._session_file.write_text('{"session": {"access_token": "test", "refresh_token": "test"}}')
    
        with patch('builtins.open', side_effect=PermissionError("Unexpected error")):
            with patch('builtins.print') as mock_print:
                result = session_storage.load_session()
    
        assert result is None
>       mock_print.assert_called_with("Warning: Unexpected error loading session: Unexpected error")
E       AssertionError: expected call not found.
E       Expected: print('Warning: Unexpected error loading session: Unexpected error')
E         Actual: print('Warning: Session file has insecure permissions, removing it')
E       
E       pytest introspection follows:
E       
E       Args:
E       assert ('Warning: Se...removing it',) == ('Warning: Un...ected error',)
E         
E         At index 0 diff: 'Warning: Session file has insecure permissions, removing it' != 'Warning: Unexpected error loading session: Unexpected error'
E         
E         Full diff:
E           (
E         -     'Warning: Unexpected error loading session: Unexpected error',
E         +     'Warning: Session file has insecure permissions, removing it',
E           )

tests/infrastructure/storage/test_session_storage.py:342: AssertionError
__________ TestSessionStorageIntegration.test_session_data_integrity ___________

self = <tests.infrastructure.storage.test_session_storage.TestSessionStorageIntegration object at 0x10f461a90>
session_storage = <src.infrastructure.storage.session_storage.SessionStorage object at 0x113820c90>

    def test_session_data_integrity(self, session_storage):
        """Test that session data maintains integrity through save/load cycle."""
        complex_session_data = {
            "access_token": "complex_token_123",
            "refresh_token": "refresh_token_456",
            "expires_at": 1234567890,
            "user_data": {
                "id": "user123",
                "email": "test@example.com",
                "metadata": {
                    "custom_field": "custom_value"
                }
            },
            "provider_tokens": ["token1", "token2"]
        }
    
        # Save and load
        session_storage.save_session(complex_session_data)
        loaded_data = session_storage.load_session()
    
        # Verify exact match
>       assert loaded_data == complex_session_data
E       AssertionError: assert None == {'access_token': 'complex_token_123', 'expires_at': 1234567890, 'provider_tokens': ['token1', 'token2'], 'refresh_token': 'refresh_token_456', ...}

tests/infrastructure/storage/test_session_storage.py:541: AssertionError
----------------------------- Captured stdout call -----------------------------
Session has expired, clearing stored session
__________ TestGetTableRange.test_get_table_range_high_out_of_bounds ___________

self = <tests.presentation.controllers.test_addition_tables.TestGetTableRange object at 0x10f4ff2f0>
mock_print = <MagicMock name='print' id='4552999328'>
mock_get_user_input = <MagicMock name='get_user_input' id='4553010416'>

    @patch('src.presentation.controllers.addition_tables.get_user_input')
    @patch('builtins.print')
    def test_get_table_range_high_out_of_bounds(self, mock_print, mock_get_user_input):
        """Test high number out of valid range."""
        mock_get_user_input.side_effect = ["5", "101", "10"]  # Second invalid, then valid
    
>       result = get_table_range()
                 ^^^^^^^^^^^^^^^^^

tests/presentation/controllers/test_addition_tables.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/presentation/controllers/addition_tables.py:19: in get_table_range
    high_input = get_user_input("Enter high number for addition table (1-100)", "10")
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1169: in __call__
    return self._mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1173: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MagicMock name='get_user_input' id='4553010416'>
args = ('Enter high number for addition table (1-100)', '10'), kwargs = {}
effect = <list_iterator object at 0x11381b370>

    def _execute_mock_call(self, /, *args, **kwargs):
        # separate from _increment_mock_call so that awaited functions are
        # executed separately from their call, also AsyncMock overrides this method
    
        effect = self.side_effect
        if effect is not None:
            if _is_exception(effect):
                raise effect
            elif not _callable(effect):
>               result = next(effect)
                         ^^^^^^^^^^^^
E               StopIteration

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1230: StopIteration
___________ TestRunAdditionTableQuiz.test_run_quiz_display_messages ____________

self = <MagicMock name='print' id='4553006048'>
args = ('🎯 Addition Table for 2 (sequential order)',), kwargs = {}
expected = call('🎯 Addition Table for 2 (sequential order)'), cause = None
actual = [call('\n🎯 Addition Table for 2 (sequential order)'), call('📝 1 problems to solve'), call("Commands: 'next' (skip), 's...====================================================='), call('\n📝 Problem 1/1: 2 + 2'), call('✅ Correct! Great job!')]
expected_string = "print('🎯 Addition Table for 2 (sequential order)')"

    def assert_any_call(self, /, *args, **kwargs):
        """assert the mock has been called with the specified arguments.
    
        The assert passes if the mock has *ever* been called, unlike
        `assert_called_with` and `assert_called_once_with` that only pass if
        the call is the most recent one."""
        expected = self._call_matcher(_Call((args, kwargs), two=True))
        cause = expected if isinstance(expected, Exception) else None
        actual = [self._call_matcher(c) for c in self.call_args_list]
        if cause or expected not in _AnyComparer(actual):
            expected_string = self._format_mock_call_signature(args, kwargs)
>           raise AssertionError(
                '%s call not found' % expected_string
            ) from cause
E           AssertionError: print('🎯 Addition Table for 2 (sequential order)') call not found

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1050: AssertionError

During handling of the above exception, another exception occurred:

self = <tests.presentation.controllers.test_addition_tables.TestRunAdditionTableQuiz object at 0x10f3d9f50>
mock_time = <MagicMock name='time' id='4553000000'>
mock_print = <MagicMock name='print' id='4553006048'>
mock_input = <MagicMock name='input' id='4553013776'>

    @patch('builtins.input')
    @patch('builtins.print')
    @patch('time.time')
    def test_run_quiz_display_messages(self, mock_time, mock_print, mock_input):
        """Test that appropriate messages are displayed during quiz."""
        generator = AdditionTableGenerator(2, 2, randomize=False)
    
        mock_time.side_effect = [0, 5]
        mock_input.side_effect = ["", "4"]  # Correct answer
    
        run_addition_table_quiz(generator)
    
        # Check that intro messages are displayed
>       mock_print.assert_any_call("🎯 Addition Table for 2 (sequential order)")
E       AssertionError: print('🎯 Addition Table for 2 (sequential order)') call not found
E       
E       pytest introspection follows:
E       
E       Args:
E       assert ('✅ Correct! Great job!',) == ('🎯 Addition ...tial order)',)
E         
E         At index 0 diff: '✅ Correct! Great job!' != '🎯 Addition Table for 2 (sequential order)'
E         
E         Full diff:
E           (
E         -     '🎯 Addition Table for 2 (sequential order)',
E         +     '✅ Correct! Great job!',
E           )

tests/presentation/controllers/test_addition_tables.py:485: AssertionError
___________ TestAdditionTablesMode.test_addition_tables_mode_success ___________

self = <MagicMock name='print' id='4553003360'>
args = ('📊 Addition Tables Mode Selected!',), kwargs = {}
expected = call('📊 Addition Tables Mode Selected!'), cause = None
actual = [call('\n📊 Addition Tables Mode Selected!'), call('\n📋 Settings:'), call('   Range: Addition table for 2 to 3'), call('   Order: Random'), call('   Total problems: 4')]
expected_string = "print('📊 Addition Tables Mode Selected!')"

    def assert_any_call(self, /, *args, **kwargs):
        """assert the mock has been called with the specified arguments.
    
        The assert passes if the mock has *ever* been called, unlike
        `assert_called_with` and `assert_called_once_with` that only pass if
        the call is the most recent one."""
        expected = self._call_matcher(_Call((args, kwargs), two=True))
        cause = expected if isinstance(expected, Exception) else None
        actual = [self._call_matcher(c) for c in self.call_args_list]
        if cause or expected not in _AnyComparer(actual):
            expected_string = self._format_mock_call_signature(args, kwargs)
>           raise AssertionError(
                '%s call not found' % expected_string
            ) from cause
E           AssertionError: print('📊 Addition Tables Mode Selected!') call not found

/usr/local/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1050: AssertionError

During handling of the above exception, another exception occurred:

self = <tests.presentation.controllers.test_addition_tables.TestAdditionTablesMode object at 0x10f4ea350>
mock_print = <MagicMock name='print' id='4553003360'>
mock_get_range = <MagicMock name='get_table_range' id='4553012768'>
mock_get_order = <MagicMock name='get_order_preference' id='4553007728'>
mock_run_quiz = <MagicMock name='run_addition_table_quiz' id='4553004368'>
mock_show_results = <MagicMock name='show_results' id='4553013104'>

    @patch('src.presentation.controllers.addition_tables.show_results')
    @patch('src.presentation.controllers.addition_tables.run_addition_table_quiz')
    @patch('src.presentation.controllers.addition_tables.get_order_preference')
    @patch('src.presentation.controllers.addition_tables.get_table_range')
    @patch('builtins.print')
    def test_addition_tables_mode_success(self, mock_print, mock_get_range, mock_get_order, mock_run_quiz, mock_show_results):
        """Test successful execution of addition tables mode."""
        # Mock user inputs
        mock_get_range.return_value = (2, 3)
        mock_get_order.return_value = True  # Random order
        mock_run_quiz.return_value = (3, 4, 60.0)  # 3 correct, 4 total, 60 seconds
    
        addition_tables_mode()
    
        # Verify function calls
        mock_get_range.assert_called_once()
        mock_get_order.assert_called_once()
        mock_run_quiz.assert_called_once()
        mock_show_results.assert_called_once()
    
        # Verify settings display
>       mock_print.assert_any_call("📊 Addition Tables Mode Selected!")
E       AssertionError: print('📊 Addition Tables Mode Selected!') call not found
E       
E       pytest introspection follows:
E       
E       Args:
E       assert ('   Total problems: 4',) == ('📊 Addition ...e Selected!',)
E         
E         At index 0 diff: '   Total problems: 4' != '📊 Addition Tables Mode Selected!'
E         
E         Full diff:
E           (
E         -     '📊 Addition Tables Mode Selected!',
E         +     '   Total problems: 4',
E           )

tests/presentation/controllers/test_addition_tables.py:517: AssertionError
=============================== warnings summary ===============================
tests/infrastructure/storage/test_session_storage.py:491
  /Users/barrymolina/Projects/mathsfun/tests/infrastructure/storage/test_session_storage.py:491: PytestUnknownMarkWarning: Unknown pytest.mark.storage - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.storage

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
================================ tests coverage ================================
_______________ coverage: platform darwin, python 3.13.3-final-0 _______________

Name                                                          Stmts   Miss  Cover   Missing
-------------------------------------------------------------------------------------------
src/__init__.py                                                   0      0   100%
src/config/__init__.py                                            0      0   100%
src/config/container.py                                          24      0   100%
src/domain/__init__.py                                            0      0   100%
src/domain/models/__init__.py                                     4      0   100%
src/domain/models/problem_attempt.py                             21      0   100%
src/domain/models/quiz_session.py                                40      0   100%
src/domain/models/user.py                                        15      0   100%
src/domain/services/__init__.py                                   3      0   100%
src/domain/services/quiz_service.py                              83      0   100%
src/domain/services/user_service.py                              77      3    96%   116, 120, 138
src/infrastructure/__init__.py                                    0      0   100%
src/infrastructure/auth/__init__.py                               0      0   100%
src/infrastructure/auth/auth.py                                   0      0   100%
src/infrastructure/database/__init__.py                           0      0   100%
src/infrastructure/database/repositories/__init__.py              4      0   100%
src/infrastructure/database/repositories/base.py                 29      2    93%   24-25
src/infrastructure/database/repositories/quiz_repository.py      93     32    66%   16-30, 52-64, 117-131, 164-178
src/infrastructure/database/repositories/user_repository.py      40      3    92%   57-59
src/infrastructure/database/supabase_manager.py                 197     73    63%   33-126, 139, 150-151, 188, 191, 194, 232, 240-329
src/infrastructure/storage/__init__.py                            0      0   100%
src/infrastructure/storage/session_storage.py                   107     11    90%   95, 100-102, 112-118
src/presentation/__init__.py                                      0      0   100%
src/presentation/cli/__init__.py                                  0      0   100%
src/presentation/cli/main.py                                     73     40    45%   17-56, 72-78, 89-92, 98-99, 113, 116-121
src/presentation/cli/ui.py                                       35     14    60%   25-29, 34-35, 40-47
src/presentation/controllers/__init__.py                          0      0   100%
src/presentation/controllers/addition.py                        191      7    96%   195, 229, 236, 243-244, 258, 276
src/presentation/controllers/addition_tables.py                 130      0   100%
src/presentation/controllers/session.py                          64     15    77%   62-78
-------------------------------------------------------------------------------------------
TOTAL                                                          1230    200    84%
Coverage HTML written to dir htmlcov
FAIL Required test coverage of 95% not reached. Total coverage: 83.74%
=========================== short test summary info ============================
FAILED tests/domain/models/test_problem_attempt.py::TestProblemAttemptFromDict::test_from_dict_with_z_suffix_timestamp
FAILED tests/domain/models/test_problem_attempt.py::TestProblemAttemptFromDict::test_from_dict_with_timezone_timestamp
FAILED tests/domain/models/test_quiz_session.py::TestQuizSessionFromDict::test_from_dict_with_z_suffix_timestamps
FAILED tests/domain/models/test_quiz_session.py::TestQuizSessionFromDict::test_from_dict_with_timezone_timestamps
FAILED tests/domain/services/test_user_service.py::TestGetCurrentUser::test_get_current_user_display_name_fallbacks
FAILED tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetSession::test_get_session_success
FAILED tests/infrastructure/database/repositories/test_quiz_repository.py::TestCompleteSession::test_complete_session_success
FAILED tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetUserSessions::test_get_user_sessions_success
FAILED tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetUserSessions::test_get_user_sessions_with_status_filter
FAILED tests/infrastructure/database/repositories/test_quiz_repository.py::TestGetSessionAttempts::test_get_session_attempts_success
FAILED tests/infrastructure/database/test_supabase_manager.py::TestOAuthServer::test_oauth_server_init
FAILED tests/infrastructure/database/test_supabase_manager.py::TestOAuthCallbackHandler::test_log_message_suppressed
FAILED tests/infrastructure/database/test_supabase_manager.py::TestOAuthCallbackHandler::test_do_get_favicon_request
FAILED tests/infrastructure/database/test_supabase_manager.py::TestOAuthCallbackHandler::test_do_get_already_authenticated
FAILED tests/infrastructure/database/test_supabase_manager.py::TestOAuthCallbackHandler::test_do_get_success_callback
FAILED tests/infrastructure/database/test_supabase_manager.py::TestOAuthCallbackHandler::test_do_get_error_callback
FAILED tests/infrastructure/database/test_supabase_manager.py::TestOAuthCallbackHandler::test_do_get_unknown_callback
FAILED tests/infrastructure/database/test_supabase_manager.py::TestSignInWithGoogle::test_sign_in_with_google_success
FAILED tests/infrastructure/database/test_supabase_manager.py::TestSignInWithGoogle::test_sign_in_with_google_no_code_verifier
FAILED tests/infrastructure/database/test_supabase_manager.py::TestSignInWithGoogle::test_sign_in_with_google_exchange_fails
FAILED tests/infrastructure/database/test_supabase_manager.py::TestSignInWithGoogle::test_sign_in_with_google_no_session_created
FAILED tests/infrastructure/storage/test_session_storage.py::TestGetConfigDirectory::test_get_config_directory_windows
FAILED tests/infrastructure/storage/test_session_storage.py::TestGetConfigDirectory::test_get_config_directory_linux_without_xdg
FAILED tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_invalid_structure
FAILED tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_file_not_found_exception
FAILED tests/infrastructure/storage/test_session_storage.py::TestLoadSession::test_load_session_unexpected_exception
FAILED tests/infrastructure/storage/test_session_storage.py::TestSessionStorageIntegration::test_session_data_integrity
FAILED tests/presentation/controllers/test_addition_tables.py::TestGetTableRange::test_get_table_range_high_out_of_bounds
FAILED tests/presentation/controllers/test_addition_tables.py::TestRunAdditionTableQuiz::test_run_quiz_display_messages
FAILED tests/presentation/controllers/test_addition_tables.py::TestAdditionTablesMode::test_addition_tables_mode_success
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestCreateSession::test_create_session_success
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestCreateSession::test_create_session_exception
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestCreateSession::test_create_session_no_data_returned
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestUpdateSession::test_update_session_success
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestUpdateSession::test_update_session_exception
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestUpdateSession::test_update_session_no_data_returned
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestSaveAttempt::test_save_attempt_success
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestSaveAttempt::test_save_attempt_exception
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestSaveAttempt::test_save_attempt_no_data_returned
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestIncrementSessionStats::test_increment_session_stats_success_correct
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestIncrementSessionStats::test_increment_session_stats_success_incorrect
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestIncrementSessionStats::test_increment_session_stats_exception
ERROR tests/infrastructure/database/repositories/test_quiz_repository.py::TestIncrementSessionStats::test_increment_session_stats_update_returns_none
======= 30 failed, 359 passed, 11 skipped, 1 warning, 13 errors in 8.34s =======
